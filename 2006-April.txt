From aurelian at berlios.de  Sun Apr 16 10:36:25 2006
From: aurelian at berlios.de (aurelian at BerliOS)
Date: Sun, 16 Apr 2006 10:36:25 +0200
Subject: [Rwd-svn] r7 - in trunk/shop: conf public scripts
Message-ID: <200604160836.k3G8aPfc017585@sheep.berlios.de>

Author: aurelian
Date: 2006-04-16 10:36:24 +0200 (Sun, 16 Apr 2006)
New Revision: 7

Modified:
   trunk/shop/conf/shop.xml
   trunk/shop/public/index.php
   trunk/shop/scripts/generator.php
Log:
 -- still alive, regenerated using svn version of medick

Modified: trunk/shop/conf/shop.xml
===================================================================
--- trunk/shop/conf/shop.xml	2006-03-30 09:29:51 UTC (rev 6)
+++ trunk/shop/conf/shop.xml	2006-04-16 08:36:24 UTC (rev 7)
@@ -14,6 +14,23 @@
             <server_name>http://localhost</server_name>
             <document_root>/shop</document_root>
             <rewrite>on</rewrite>
+            <!-- Session Container
+            Only CreoleSessionContainer is available.
+            It needs a database table:
+            === start ===
+            create table c_sessions (
+                `session_id`   VARCHAR (255) PRIMARY KEY,
+                `session_data` TEXT,
+                `session_lastmodified` DATETIME
+            );
+            ===  end  ===
+            NOTE: this was tested only on mysql driver
+            NOTE: to implement your own session container (handler), see ISessionContainer inteface
+            === end comment here ===
+            <session>
+                <container>action.controller.session.CreoleSessionContainer</container>
+            </session>
+            -->
         </web>
         <!-- logger system -->
         <logger>

Modified: trunk/shop/public/index.php
===================================================================
--- trunk/shop/public/index.php	2006-03-30 09:29:51 UTC (rev 6)
+++ trunk/shop/public/index.php	2006-04-16 08:36:24 UTC (rev 7)
@@ -3,7 +3,7 @@
 
 // 
 // This file is part of shop project
-// auto-generated on 2006 Mar 19 00:16:26 with medick version: 0.2.2-svn
+// auto-generated on 2006 Apr 16 11:13:18 with medick version: 0.2.3-svn
 // 
 
 // complete path to medick boot.php file.

Modified: trunk/shop/scripts/generator.php
===================================================================
--- trunk/shop/scripts/generator.php	2006-03-30 09:29:51 UTC (rev 6)
+++ trunk/shop/scripts/generator.php	2006-04-16 08:36:24 UTC (rev 7)
@@ -20,13 +20,13 @@
     default:
         exit(main_banner($argv[0]));
 }  
-exit ("\nMedick (\$v: 0.2.2-svn) [ DONE ].\n");
+exit ("\nMedick (\$v: 0.2.3-svn) [ DONE ].\n");
 // }}}
 
 // {{{ main_banner
 function main_banner($script_name) {
     $buffer =<<<EOBANNER
-Medick Generator 0.2.2-svn 
+Medick Generator 0.2.3-svn 
 (c) 2005-2006 Oancea Aurelian, see LICENSE file for copyright details.
  
      Use one of controller or model:



From aurelian at berlios.de  Sun Apr 16 10:40:44 2006
From: aurelian at berlios.de (aurelian at BerliOS)
Date: Sun, 16 Apr 2006 10:40:44 +0200
Subject: [Rwd-svn] r8 - in trunk: . medickart
Message-ID: <200604160840.k3G8eiiC020340@sheep.berlios.de>

Author: aurelian
Date: 2006-04-16 10:40:43 +0200 (Sun, 16 Apr 2006)
New Revision: 8

Added:
   trunk/medickart/
   trunk/medickart/conf/
   trunk/medickart/public/
   trunk/medickart/scripts/
Removed:
   trunk/medickart/conf/
   trunk/medickart/public/
   trunk/medickart/scripts/
   trunk/shop/
Log:
 -- renamed project to medickart

Copied: trunk/medickart (from rev 6, trunk/shop)

Copied: trunk/medickart/conf (from rev 7, trunk/shop/conf)

Copied: trunk/medickart/public (from rev 7, trunk/shop/public)

Copied: trunk/medickart/scripts (from rev 7, trunk/shop/scripts)



From aurelian at berlios.de  Sun Apr 16 11:01:05 2006
From: aurelian at berlios.de (aurelian at BerliOS)
Date: Sun, 16 Apr 2006 11:01:05 +0200
Subject: [Rwd-svn] r9 - in trunk/medickart/public: images javascript
Message-ID: <200604160901.k3G915hD022616@sheep.berlios.de>

Author: aurelian
Date: 2006-04-16 11:00:36 +0200 (Sun, 16 Apr 2006)
New Revision: 9

Added:
   trunk/medickart/public/images/logo.jpg
Modified:
   trunk/medickart/public/javascript/controls.js
   trunk/medickart/public/javascript/dragdrop.js
   trunk/medickart/public/javascript/effects.js
   trunk/medickart/public/javascript/prototype.js
   trunk/medickart/public/javascript/scriptaculous.js
Log:
-- added a nice logo for our project"
-- upgraded prototype to 1.5.0_rc0 and script.aculo.us to 1.6.1"



Added: trunk/medickart/public/images/logo.jpg
===================================================================
(Binary files differ)


Property changes on: trunk/medickart/public/images/logo.jpg
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Modified: trunk/medickart/public/javascript/controls.js
===================================================================
--- trunk/medickart/public/javascript/controls.js	2006-04-16 08:40:43 UTC (rev 8)
+++ trunk/medickart/public/javascript/controls.js	2006-04-16 09:00:36 UTC (rev 9)
@@ -141,8 +141,8 @@
          return;
       }
      else 
-      if(event.keyCode==Event.KEY_TAB || event.keyCode==Event.KEY_RETURN) 
-        return;
+       if(event.keyCode==Event.KEY_TAB || event.keyCode==Event.KEY_RETURN || 
+         (navigator.appVersion.indexOf('AppleWebKit') > 0 && event.keyCode == 0)) return;
 
     this.changed = true;
     this.hasFocus = true;

Modified: trunk/medickart/public/javascript/dragdrop.js
===================================================================
--- trunk/medickart/public/javascript/dragdrop.js	2006-04-16 08:40:43 UTC (rev 8)
+++ trunk/medickart/public/javascript/dragdrop.js	2006-04-16 09:00:36 UTC (rev 9)
@@ -1,4 +1,5 @@
 // Copyright (c) 2005 Thomas Fuchs (http://script.aculo.us, http://mir.aculo.us)
+//           (c) 2005 Sammi Williams (http://www.oriontransfer.co.nz, sammi at oriontransfer.co.nz)
 // 
 // See scriptaculous.js for full license.
 
@@ -15,7 +16,8 @@
     element = $(element);
     var options = Object.extend({
       greedy:     true,
-      hoverclass: null  
+      hoverclass: null,
+      tree:       false
     }, arguments[1] || {});
 
     // cache containers
@@ -37,12 +39,27 @@
 
     this.drops.push(options);
   },
+  
+  findDeepestChild: function(drops) {
+    deepest = drops[0];
+      
+    for (i = 1; i < drops.length; ++i)
+      if (Element.isParent(drops[i].element, deepest.element))
+        deepest = drops[i];
+    
+    return deepest;
+  },
 
   isContained: function(element, drop) {
-    var parentNode = element.parentNode;
-    return drop._containers.detect(function(c) { return parentNode == c });
+    var containmentNode;
+    if(drop.tree) {
+      containmentNode = element.treeNode; 
+    } else {
+      containmentNode = element.parentNode;
+    }
+    return drop._containers.detect(function(c) { return containmentNode == c });
   },
-
+  
   isAffected: function(point, element, drop) {
     return (
       (drop.element!=element) &&
@@ -68,18 +85,22 @@
 
   show: function(point, element) {
     if(!this.drops.length) return;
+    var affected = [];
     
     if(this.last_active) this.deactivate(this.last_active);
     this.drops.each( function(drop) {
-      if(Droppables.isAffected(point, element, drop)) {
-        if(drop.onHover)
-           drop.onHover(element, drop.element, Position.overlap(drop.overlap, drop.element));
-        if(drop.greedy) { 
-          Droppables.activate(drop);
-          throw $break;
-        }
-      }
+      if(Droppables.isAffected(point, element, drop))
+        affected.push(drop);
     });
+        
+    if(affected.length>0) {
+      drop = Droppables.findDeepestChild(affected);
+      Position.within(drop.element, point[0], point[1]);
+      if(drop.onHover)
+        drop.onHover(element, drop.element, Position.overlap(drop.overlap, drop.element));
+      
+      Droppables.activate(drop);
+    }
   },
 
   fire: function(event, element) {
@@ -187,15 +208,17 @@
   initialize: function(element) {
     var options = Object.extend({
       handle: false,
-      starteffect: function(element) { 
-        new Effect.Opacity(element, {duration:0.2, from:1.0, to:0.7}); 
+      starteffect: function(element) {
+        element._opacity = Element.getOpacity(element); 
+        new Effect.Opacity(element, {duration:0.2, from:element._opacity, to:0.7}); 
       },
       reverteffect: function(element, top_offset, left_offset) {
         var dur = Math.sqrt(Math.abs(top_offset^2)+Math.abs(left_offset^2))*0.02;
         element._revert = new Effect.Move(element, { x: -left_offset, y: -top_offset, duration: dur});
       },
-      endeffect: function(element) { 
-        new Effect.Opacity(element, {duration:0.2, from:0.7, to:1.0}); 
+      endeffect: function(element) {
+        var toOpacity = typeof element._opacity == 'number' ? element._opacity : 1.0
+        new Effect.Opacity(element, {duration:0.2, from:0.7, to:toOpacity}); 
       },
       zindex: 1000,
       revert: false,
@@ -207,12 +230,15 @@
 
     this.element = $(element);
     
-    if(options.handle && (typeof options.handle == 'string'))
-      this.handle = Element.childrenWithClassName(this.element, options.handle)[0];  
+    if(options.handle && (typeof options.handle == 'string')) {
+      var h = Element.childrenWithClassName(this.element, options.handle, true);
+      if(h.length>0) this.handle = h[0];
+    }
     if(!this.handle) this.handle = $(options.handle);
     if(!this.handle) this.handle = this.element;
     
-    if(options.scroll) options.scroll = $(options.scroll);
+    if(options.scroll && !options.scroll.scrollTo && !options.scroll.outerHTML)
+      options.scroll = $(options.scroll);
 
     Element.makePositioned(this.element); // fix IE    
 
@@ -277,8 +303,14 @@
     }
     
     if(this.options.scroll) {
-      this.originalScrollLeft = this.options.scroll.scrollLeft;
-      this.originalScrollTop = this.options.scroll.scrollTop;
+      if (this.options.scroll == window) {
+        var where = this._getWindowScroll(this.options.scroll);
+        this.originalScrollLeft = where.left;
+        this.originalScrollTop = where.top;
+      } else {
+        this.originalScrollLeft = this.options.scroll.scrollLeft;
+        this.originalScrollTop = this.options.scroll.scrollTop;
+      }
     }
     
     Draggables.notify('onStart', this, event);
@@ -294,13 +326,18 @@
     if(this.options.change) this.options.change(this);
     
     if(this.options.scroll) {
-      //if(this.scrollInterval) this.scroll();
       this.stopScrolling();
-      var p = Position.page(this.options.scroll);
-      p[0] += this.options.scroll.scrollLeft;
-      p[1] += this.options.scroll.scrollTop;
-      p.push(p[0]+this.options.scroll.offsetWidth);
-      p.push(p[1]+this.options.scroll.offsetHeight);
+      
+      var p;
+      if (this.options.scroll == window) {
+        with(this._getWindowScroll(this.options.scroll)) { p = [ left, top, left+width, top+height ]; }
+      } else {
+        p = Position.page(this.options.scroll);
+        p[0] += this.options.scroll.scrollLeft;
+        p[1] += this.options.scroll.scrollTop;
+        p.push(p[0]+this.options.scroll.offsetWidth);
+        p.push(p[1]+this.options.scroll.offsetHeight);
+      }
       var speed = [0,0];
       if(pointer[0] < (p[0]+this.options.scrollSensitivity)) speed[0] = pointer[0]-(p[0]+this.options.scrollSensitivity);
       if(pointer[1] < (p[1]+this.options.scrollSensitivity)) speed[1] = pointer[1]-(p[1]+this.options.scrollSensitivity);
@@ -366,7 +403,7 @@
     var d = this.currentDelta();
     pos[0] -= d[0]; pos[1] -= d[1];
     
-    if(this.options.scroll) {
+    if(this.options.scroll && (this.options.scroll != window)) {
       pos[0] -= this.options.scroll.scrollLeft-this.originalScrollLeft;
       pos[1] -= this.options.scroll.scrollTop-this.originalScrollTop;
     }
@@ -377,7 +414,7 @@
     
     if(this.options.snap) {
       if(typeof this.options.snap == 'function') {
-        p = this.options.snap(p[0],p[1]);
+        p = this.options.snap(p[0],p[1],this);
       } else {
       if(this.options.snap instanceof Array) {
         p = p.map( function(v, i) {
@@ -400,6 +437,7 @@
     if(this.scrollInterval) {
       clearInterval(this.scrollInterval);
       this.scrollInterval = null;
+      Draggables._lastScrollPointer = null;
     }
   },
   
@@ -413,15 +451,55 @@
     var current = new Date();
     var delta = current - this.lastScrolled;
     this.lastScrolled = current;
-    this.options.scroll.scrollLeft += this.scrollSpeed[0] * delta / 1000;
-    this.options.scroll.scrollTop  += this.scrollSpeed[1] * delta / 1000;
+    if(this.options.scroll == window) {
+      with (this._getWindowScroll(this.options.scroll)) {
+        if (this.scrollSpeed[0] || this.scrollSpeed[1]) {
+          var d = delta / 1000;
+          this.options.scroll.scrollTo( left + d*this.scrollSpeed[0], top + d*this.scrollSpeed[1] );
+        }
+      }
+    } else {
+      this.options.scroll.scrollLeft += this.scrollSpeed[0] * delta / 1000;
+      this.options.scroll.scrollTop  += this.scrollSpeed[1] * delta / 1000;
+    }
     
     Position.prepare();
     Droppables.show(Draggables._lastPointer, this.element);
     Draggables.notify('onDrag', this);
-    this.draw(Draggables._lastPointer);    
+    Draggables._lastScrollPointer = Draggables._lastScrollPointer || $A(Draggables._lastPointer);
+    Draggables._lastScrollPointer[0] += this.scrollSpeed[0] * delta / 1000;
+    Draggables._lastScrollPointer[1] += this.scrollSpeed[1] * delta / 1000;
+    if (Draggables._lastScrollPointer[0] < 0)
+      Draggables._lastScrollPointer[0] = 0;
+    if (Draggables._lastScrollPointer[1] < 0)
+      Draggables._lastScrollPointer[1] = 0;
+    this.draw(Draggables._lastScrollPointer);
     
     if(this.options.change) this.options.change(this);
+  },
+  
+  _getWindowScroll: function(w) {
+    var T, L, W, H;
+    with (w.document) {
+      if (w.document.documentElement && documentElement.scrollTop) {
+        T = documentElement.scrollTop;
+        L = documentElement.scrollLeft;
+      } else if (w.document.body) {
+        T = body.scrollTop;
+        L = body.scrollLeft;
+      }
+      if (w.innerWidth) {
+        W = w.innerWidth;
+        H = w.innerHeight;
+      } else if (w.document.documentElement && documentElement.clientWidth) {
+        W = documentElement.clientWidth;
+        H = documentElement.clientHeight;
+      } else {
+        W = body.offsetWidth;
+        H = body.offsetHeight
+      }
+    }
+    return { top: T, left: L, width: W, height: H };
   }
 }
 
@@ -447,30 +525,41 @@
 }
 
 var Sortable = {
-  sortables: new Array(),
+  sortables: {},
   
-  options: function(element){
-    element = $(element);
-    return this.sortables.detect(function(s) { return s.element == element });
+  _findRootElement: function(element) {
+    while (element.tagName != "BODY") {  
+      if(element.id && Sortable.sortables[element.id]) return element;
+      element = element.parentNode;
+    }
   },
+
+  options: function(element) {
+    element = Sortable._findRootElement($(element));
+    if(!element) return;
+    return Sortable.sortables[element.id];
+  },
   
   destroy: function(element){
-    element = $(element);
-    this.sortables.findAll(function(s) { return s.element == element }).each(function(s){
+    var s = Sortable.options(element);
+    
+    if(s) {
       Draggables.removeObserver(s.element);
       s.droppables.each(function(d){ Droppables.remove(d) });
       s.draggables.invoke('destroy');
-    });
-    this.sortables = this.sortables.reject(function(s) { return s.element == element });
+      
+      delete Sortable.sortables[s.element.id];
+    }
   },
-  
+
   create: function(element) {
     element = $(element);
     var options = Object.extend({ 
       element:     element,
       tag:         'li',       // assumes li children, override with tag: 'tagname'
       dropOnEmpty: false,
-      tree:        false,      // fixme: unimplemented
+      tree:        false,
+      treeTag:     'ul',
       overlap:     'vertical', // one of 'vertical', 'horizontal'
       constraint:  'vertical', // one of 'vertical', 'horizontal', false
       containment: element,    // also takes array of elements (or id's); or false
@@ -479,6 +568,8 @@
       hoverclass:  null,
       ghosting:    false,
       scroll:      false,
+      scrollSensitivity: 20,
+      scrollSpeed: 15,
       format:      /^[^_]*_(.*)$/,
       onChange:    Prototype.emptyFunction,
       onUpdate:    Prototype.emptyFunction
@@ -491,6 +582,8 @@
     var options_for_draggable = {
       revert:      true,
       scroll:      options.scroll,
+      scrollSpeed: options.scrollSpeed,
+      scrollSensitivity: options.scrollSensitivity,
       ghosting:    options.ghosting,
       constraint:  options.constraint,
       handle:      options.handle };
@@ -516,10 +609,18 @@
     var options_for_droppable = {
       overlap:     options.overlap,
       containment: options.containment,
+      tree:        options.tree,
       hoverclass:  options.hoverclass,
-      onHover:     Sortable.onHover,
-      greedy:      !options.dropOnEmpty
+      onHover:     Sortable.onHover
+      //greedy:      !options.dropOnEmpty
     }
+    
+    var options_for_tree = {
+      onHover:      Sortable.onEmptyHover,
+      overlap:      options.overlap,
+      containment:  options.containment,
+      hoverclass:   options.hoverclass
+    }
 
     // fix for gecko engine
     Element.cleanWhitespace(element); 
@@ -527,12 +628,9 @@
     options.draggables = [];
     options.droppables = [];
 
-    // make it so
-
     // drop on empty handling
-    if(options.dropOnEmpty) {
-      Droppables.add(element,
-        {containment: options.containment, onHover: Sortable.onEmptyHover, greedy: false});
+    if(options.dropOnEmpty || options.tree) {
+      Droppables.add(element, options_for_tree);
       options.droppables.push(element);
     }
 
@@ -543,11 +641,20 @@
       options.draggables.push(
         new Draggable(e, Object.extend(options_for_draggable, { handle: handle })));
       Droppables.add(e, options_for_droppable);
+      if(options.tree) e.treeNode = element;
       options.droppables.push(e);      
     });
+    
+    if(options.tree) {
+      (Sortable.findTreeElements(element, options) || []).each( function(e) {
+        Droppables.add(e, options_for_tree);
+        e.treeNode = element;
+        options.droppables.push(e);
+      });
+    }
 
     // keep reference
-    this.sortables.push(options);
+    this.sortables[element.id] = options;
 
     // for onupdate
     Draggables.addObserver(new SortableObserver(element, options.onUpdate));
@@ -556,23 +663,21 @@
 
   // return all suitable-for-sortable elements in a guaranteed order
   findElements: function(element, options) {
-    if(!element.hasChildNodes()) return null;
-    var elements = [];
-    $A(element.childNodes).each( function(e) {
-      if(e.tagName && e.tagName.toUpperCase()==options.tag.toUpperCase() &&
-        (!options.only || (Element.hasClassName(e, options.only))))
-          elements.push(e);
-      if(options.tree) {
-        var grandchildren = this.findElements(e, options);
-        if(grandchildren) elements.push(grandchildren);
-      }
-    });
-
-    return (elements.length>0 ? elements.flatten() : null);
+    return Element.findChildren(
+      element, options.only, options.tree ? true : false, options.tag);
   },
+  
+  findTreeElements: function(element, options) {
+    return Element.findChildren(
+      element, options.only, options.tree ? true : false, options.treeTag);
+  },
 
   onHover: function(element, dropon, overlap) {
-    if(overlap>0.5) {
+    if(Element.isParent(dropon, element)) return;
+
+    if(overlap > .33 && overlap < .66 && Sortable.options(dropon).tree) {
+      return;
+    } else if(overlap>0.5) {
       Sortable.mark(dropon, 'before');
       if(dropon.previousSibling != element) {
         var oldParentNode = element.parentNode;
@@ -595,13 +700,37 @@
       }
     }
   },
-
-  onEmptyHover: function(element, dropon) {
-    if(element.parentNode!=dropon) {
-      var oldParentNode = element.parentNode;
-      dropon.appendChild(element);
+  
+  onEmptyHover: function(element, dropon, overlap) {
+    var oldParentNode = element.parentNode;
+    var droponOptions = Sortable.options(dropon);
+        
+    if(!Element.isParent(dropon, element)) {
+      var index;
+      
+      var children = Sortable.findElements(dropon, {tag: droponOptions.tag});
+      var child = null;
+            
+      if(children) {
+        var offset = Element.offsetSize(dropon, droponOptions.overlap) * (1.0 - overlap);
+        
+        for (index = 0; index < children.length; index += 1) {
+          if (offset - Element.offsetSize (children[index], droponOptions.overlap) >= 0) {
+            offset -= Element.offsetSize (children[index], droponOptions.overlap);
+          } else if (offset - (Element.offsetSize (children[index], droponOptions.overlap) / 2) >= 0) {
+            child = index + 1 < children.length ? children[index + 1] : null;
+            break;
+          } else {
+            child = children[index];
+            break;
+          }
+        }
+      }
+      
+      dropon.insertBefore(element, child);
+      
       Sortable.options(oldParentNode).onChange(element);
-      Sortable.options(dropon).onChange(element);
+      droponOptions.onChange(element);
     }
   },
 
@@ -633,7 +762,76 @@
     
     Element.show(Sortable._marker);
   },
+  
+  _tree: function(element, options, parent) {
+    var children = Sortable.findElements(element, options) || [];
+  
+    for (var i = 0; i < children.length; ++i) {
+      var match = children[i].id.match(options.format);
 
+      if (!match) continue;
+      
+      var child = {
+        id: encodeURIComponent(match ? match[1] : null),
+        element: element,
+        parent: parent,
+        children: new Array,
+        position: parent.children.length,
+        container: Sortable._findChildrenElement(children[i], options.treeTag.toUpperCase())
+      }
+      
+      /* Get the element containing the children and recurse over it */
+      if (child.container)
+        this._tree(child.container, options, child)
+      
+      parent.children.push (child);
+    }
+
+    return parent; 
+  },
+
+  /* Finds the first element of the given tag type within a parent element.
+    Used for finding the first LI[ST] within a L[IST]I[TEM].*/
+  _findChildrenElement: function (element, containerTag) {
+    if (element && element.hasChildNodes)
+      for (var i = 0; i < element.childNodes.length; ++i)
+        if (element.childNodes[i].tagName == containerTag)
+          return element.childNodes[i];
+  
+    return null;
+  },
+
+  tree: function(element) {
+    element = $(element);
+    var sortableOptions = this.options(element);
+    var options = Object.extend({
+      tag: sortableOptions.tag,
+      treeTag: sortableOptions.treeTag,
+      only: sortableOptions.only,
+      name: element.id,
+      format: sortableOptions.format
+    }, arguments[1] || {});
+    
+    var root = {
+      id: null,
+      parent: null,
+      children: new Array,
+      container: element,
+      position: 0
+    }
+    
+    return Sortable._tree (element, options, root);
+  },
+
+  /* Construct a [i] index for a particular node */
+  _constructIndex: function(node) {
+    var index = '';
+    do {
+      if (node.id) index = '[' + node.position + ']' + index;
+    } while ((node = node.parent) != null);
+    return index;
+  },
+
   sequence: function(element) {
     element = $(element);
     var options = Object.extend(this.options(element), arguments[1] || {});
@@ -655,20 +853,63 @@
     });
    
     new_sequence.each(function(ident) {
-        var n = nodeMap[ident];
-        if (n) {
-            n[1].appendChild(n[0]);
-            delete nodeMap[ident];
-        }
+      var n = nodeMap[ident];
+      if (n) {
+        n[1].appendChild(n[0]);
+        delete nodeMap[ident];
+      }
     });
   },
-
+  
   serialize: function(element) {
     element = $(element);
+    var options = Object.extend(Sortable.options(element), arguments[1] || {});
     var name = encodeURIComponent(
       (arguments[1] && arguments[1].name) ? arguments[1].name : element.id);
-    return Sortable.sequence(element, arguments[1]).map( function(item) {
-      return name + "[]=" + encodeURIComponent(item);
-    }).join('&');
+    
+    if (options.tree) {
+      return Sortable.tree(element, arguments[1]).children.map( function (item) {
+        return [name + Sortable._constructIndex(item) + "=" + 
+                encodeURIComponent(item.id)].concat(item.children.map(arguments.callee));
+      }).flatten().join('&');
+    } else {
+      return Sortable.sequence(element, arguments[1]).map( function(item) {
+        return name + "[]=" + encodeURIComponent(item);
+      }).join('&');
+    }
   }
 }
+
+/* Returns true if child is contained within element */
+Element.isParent = function(child, element) {
+  if (!child.parentNode || child == element) return false;
+
+  if (child.parentNode == element) return true;
+
+  return Element.isParent(child.parentNode, element);
+}
+
+Element.findChildren = function(element, only, recursive, tagName) {    
+  if(!element.hasChildNodes()) return null;
+  tagName = tagName.toUpperCase();
+  if(only) only = [only].flatten();
+  var elements = [];
+  $A(element.childNodes).each( function(e) {
+    if(e.tagName && e.tagName.toUpperCase()==tagName &&
+      (!only || (Element.classNames(e).detect(function(v) { return only.include(v) }))))
+        elements.push(e);
+    if(recursive) {
+      var grandchildren = Element.findChildren(e, only, recursive, tagName);
+      if(grandchildren) elements.push(grandchildren);
+    }
+  });
+
+  return (elements.length>0 ? elements.flatten() : []);
+}
+
+Element.offsetSize = function (element, type) {
+  if (type == 'vertical' || type == 'height')
+    return element.offsetHeight;
+  else
+    return element.offsetWidth;
+}
\ No newline at end of file

Modified: trunk/medickart/public/javascript/effects.js
===================================================================
--- trunk/medickart/public/javascript/effects.js	2006-04-16 08:40:43 UTC (rev 8)
+++ trunk/medickart/public/javascript/effects.js	2006-04-16 09:00:36 UTC (rev 9)
@@ -6,8 +6,6 @@
 // 
 // See scriptaculous.js for full license.  
 
-/* ------------- element ext -------------- */  
- 
 // converts rgb() and #xxx to #xxxxxx format,  
 // returns self (or first argument) if not convertable  
 String.prototype.parseColor = function() {  
@@ -24,6 +22,8 @@
   return(color.length==7 ? color : (arguments[0] || this));  
 }
 
+/*--------------------------------------------------------------------------*/
+
 Element.collectTextNodes = function(element) {  
   return $A($(element).childNodes).collect( function(node) {
     return (node.nodeType==3 ? node.nodeValue : 
@@ -39,14 +39,10 @@
   }).flatten().join('');
 }
 
-Element.setStyle = function(element, style) {
-  element = $(element);
-  for(k in style) element.style[k.camelize()] = style[k];
-}
-
-Element.setContentZoom = function(element, percent) {  
+Element.setContentZoom = function(element, percent) {
+  element = $(element);  
   Element.setStyle(element, {fontSize: (percent/100) + 'em'});   
-  if(navigator.appVersion.indexOf('AppleWebKit')>0) window.scrollBy(0,0);  
+  if(navigator.appVersion.indexOf('AppleWebKit')>0) window.scrollBy(0,0);
 }
 
 Element.getOpacity = function(element){  
@@ -73,18 +69,33 @@
      Element.setStyle(element, 
        { filter: Element.getStyle(element,'filter').replace(/alpha\([^\)]*\)/gi,'') +
                  'alpha(opacity='+value*100+')' });  
-  }   
+  }
 }  
  
 Element.getInlineOpacity = function(element){  
   return $(element).style.opacity || '';
 }  
 
-Element.childrenWithClassName = function(element, className) {  
-  return $A($(element).getElementsByTagName('*')).select(
-    function(c) { return Element.hasClassName(c, className) });
+Element.childrenWithClassName = function(element, className, findFirst) {
+  var classNameRegExp = new RegExp("(^|\\s)" + className + "(\\s|$)");
+  var results = $A($(element).getElementsByTagName('*'))[findFirst ? 'detect' : 'select']( function(c) { 
+    return (c.className && c.className.match(classNameRegExp));
+  });
+  if(!results) results = [];
+  return results;
 }
 
+Element.forceRerendering = function(element) {
+  try {
+    element = $(element);
+    var n = document.createTextNode(' ');
+    element.appendChild(n);
+    element.removeChild(n);
+  } catch(e) { }
+};
+
+/*--------------------------------------------------------------------------*/
+
 Array.prototype.call = function() {
   var args = arguments;
   this.each(function(f){ f.apply(this, args) });
@@ -139,7 +150,7 @@
     var options = Object.extend({
       queue: { position:'end', scope:(element.id || 'global'), limit: 1 }
     }, arguments[2] || {});
-    Effect[Element.visible(element) ? 
+    Effect[element.visible() ? 
       Effect.PAIRS[effect][1] : Effect.PAIRS[effect][0]](element, options);
   }
 };
@@ -343,15 +354,15 @@
     this.element = $(element);
     // make this work on IE on elements without 'layout'
     if(/MSIE/.test(navigator.userAgent) && (!this.element.hasLayout))
-      Element.setStyle(this.element, {zoom: 1});
+      this.element.setStyle({zoom: 1});
     var options = Object.extend({
-      from: Element.getOpacity(this.element) || 0.0,
+      from: this.element.getOpacity() || 0.0,
       to:   1.0
     }, arguments[1] || {});
     this.start(options);
   },
   update: function(position) {
-    Element.setOpacity(this.element, position);
+    this.element.setOpacity(position);
   }
 });
 
@@ -371,9 +382,9 @@
     // relative element that does not have top/left explicitly set.
     // ==> Always set top and left for position relative elements in your stylesheets 
     // (to 0 if you do not need them) 
-    Element.makePositioned(this.element);
-    this.originalLeft = parseFloat(Element.getStyle(this.element,'left') || '0');
-    this.originalTop  = parseFloat(Element.getStyle(this.element,'top')  || '0');
+    this.element.makePositioned();
+    this.originalLeft = parseFloat(this.element.getStyle('left') || '0');
+    this.originalTop  = parseFloat(this.element.getStyle('top')  || '0');
     if(this.options.mode == 'absolute') {
       // absolute movement, so we need to calc deltaX and deltaY
       this.options.x = this.options.x - this.originalLeft;
@@ -381,7 +392,7 @@
     }
   },
   update: function(position) {
-    Element.setStyle(this.element, {
+    this.element.setStyle({
       left: this.options.x  * position + this.originalLeft + 'px',
       top:  this.options.y  * position + this.originalTop  + 'px'
     });
@@ -411,7 +422,7 @@
   },
   setup: function() {
     this.restoreAfterFinish = this.options.restoreAfterFinish || false;
-    this.elementPositioning = Element.getStyle(this.element,'position');
+    this.elementPositioning = this.element.getStyle('position');
     
     this.originalStyle = {};
     ['top','left','width','height','fontSize'].each( function(k) {
@@ -421,7 +432,7 @@
     this.originalTop  = this.element.offsetTop;
     this.originalLeft = this.element.offsetLeft;
     
-    var fontSize = Element.getStyle(this.element,'font-size') || '100%';
+    var fontSize = this.element.getStyle('font-size') || '100%';
     ['em','px','%'].each( function(fontSizeType) {
       if(fontSize.indexOf(fontSizeType)>0) {
         this.fontSize     = parseFloat(fontSize);
@@ -443,11 +454,11 @@
   update: function(position) {
     var currentScale = (this.options.scaleFrom/100.0) + (this.factor * position);
     if(this.options.scaleContent && this.fontSize)
-      Element.setStyle(this.element, {fontSize: this.fontSize * currentScale + this.fontSizeType });
+      this.element.setStyle({fontSize: this.fontSize * currentScale + this.fontSizeType });
     this.setDimensions(this.dims[0] * currentScale, this.dims[1] * currentScale);
   },
   finish: function(position) {
-    if (this.restoreAfterFinish) Element.setStyle(this.element, this.originalStyle);
+    if (this.restoreAfterFinish) this.element.setStyle(this.originalStyle);
   },
   setDimensions: function(height, width) {
     var d = {};
@@ -464,7 +475,7 @@
         if(this.options.scaleX) d.left = -leftd + 'px';
       }
     }
-    Element.setStyle(this.element, d);
+    this.element.setStyle(d);
   }
 });
 
@@ -477,25 +488,25 @@
   },
   setup: function() {
     // Prevent executing on elements not in the layout flow
-    if(Element.getStyle(this.element, 'display')=='none') { this.cancel(); return; }
+    if(this.element.getStyle('display')=='none') { this.cancel(); return; }
     // Disable background image during the effect
     this.oldStyle = {
-      backgroundImage: Element.getStyle(this.element, 'background-image') };
-    Element.setStyle(this.element, {backgroundImage: 'none'});
+      backgroundImage: this.element.getStyle('background-image') };
+    this.element.setStyle({backgroundImage: 'none'});
     if(!this.options.endcolor)
-      this.options.endcolor = Element.getStyle(this.element, 'background-color').parseColor('#ffffff');
+      this.options.endcolor = this.element.getStyle('background-color').parseColor('#ffffff');
     if(!this.options.restorecolor)
-      this.options.restorecolor = Element.getStyle(this.element, 'background-color');
+      this.options.restorecolor = this.element.getStyle('background-color');
     // init color calculations
     this._base  = $R(0,2).map(function(i){ return parseInt(this.options.startcolor.slice(i*2+1,i*2+3),16) }.bind(this));
     this._delta = $R(0,2).map(function(i){ return parseInt(this.options.endcolor.slice(i*2+1,i*2+3),16)-this._base[i] }.bind(this));
   },
   update: function(position) {
-    Element.setStyle(this.element,{backgroundColor: $R(0,2).inject('#',function(m,v,i){
+    this.element.setStyle({backgroundColor: $R(0,2).inject('#',function(m,v,i){
       return m+(Math.round(this._base[i]+(this._delta[i]*position)).toColorPart()); }.bind(this)) });
   },
   finish: function() {
-    Element.setStyle(this.element, Object.extend(this.oldStyle, {
+    this.element.setStyle(Object.extend(this.oldStyle, {
       backgroundColor: this.options.restorecolor
     }));
   }
@@ -529,75 +540,83 @@
 /* ------------- combination effects ------------- */
 
 Effect.Fade = function(element) {
-  var oldOpacity = Element.getInlineOpacity(element);
+  element = $(element);
+  var oldOpacity = element.getInlineOpacity();
   var options = Object.extend({
-  from: Element.getOpacity(element) || 1.0,
+  from: element.getOpacity() || 1.0,
   to:   0.0,
-  afterFinishInternal: function(effect) { with(Element) { 
+  afterFinishInternal: function(effect) { 
     if(effect.options.to!=0) return;
-    hide(effect.element);
-    setStyle(effect.element, {opacity: oldOpacity}); }}
-  }, arguments[1] || {});
+    effect.element.hide();
+    effect.element.setStyle({opacity: oldOpacity}); 
+  }}, arguments[1] || {});
   return new Effect.Opacity(element,options);
 }
 
 Effect.Appear = function(element) {
+  element = $(element);
   var options = Object.extend({
-  from: (Element.getStyle(element, 'display') == 'none' ? 0.0 : Element.getOpacity(element) || 0.0),
+  from: (element.getStyle('display') == 'none' ? 0.0 : element.getOpacity() || 0.0),
   to:   1.0,
-  beforeSetup: function(effect) { with(Element) {
-    setOpacity(effect.element, effect.options.from);
-    show(effect.element); }}
-  }, arguments[1] || {});
+  // force Safari to render floated elements properly
+  afterFinishInternal: function(effect) {
+    effect.element.forceRerendering();
+  },
+  beforeSetup: function(effect) {
+    effect.element.setOpacity(effect.options.from);
+    effect.element.show(); 
+  }}, arguments[1] || {});
   return new Effect.Opacity(element,options);
 }
 
 Effect.Puff = function(element) {
   element = $(element);
-  var oldStyle = { opacity: Element.getInlineOpacity(element), position: Element.getStyle(element, 'position') };
+  var oldStyle = { opacity: element.getInlineOpacity(), position: element.getStyle('position') };
   return new Effect.Parallel(
    [ new Effect.Scale(element, 200, 
       { sync: true, scaleFromCenter: true, scaleContent: true, restoreAfterFinish: true }), 
      new Effect.Opacity(element, { sync: true, to: 0.0 } ) ], 
      Object.extend({ duration: 1.0, 
-      beforeSetupInternal: function(effect) { with(Element) {
-        setStyle(effect.effects[0].element, {position: 'absolute'}); }},
-      afterFinishInternal: function(effect) { with(Element) {
-         hide(effect.effects[0].element);
-         setStyle(effect.effects[0].element, oldStyle); }}
+      beforeSetupInternal: function(effect) {
+        effect.effects[0].element.setStyle({position: 'absolute'}); },
+      afterFinishInternal: function(effect) {
+         effect.effects[0].element.hide();
+         effect.effects[0].element.setStyle(oldStyle); }
      }, arguments[1] || {})
    );
 }
 
 Effect.BlindUp = function(element) {
   element = $(element);
-  Element.makeClipping(element);
+  element.makeClipping();
   return new Effect.Scale(element, 0, 
     Object.extend({ scaleContent: false, 
       scaleX: false, 
       restoreAfterFinish: true,
-      afterFinishInternal: function(effect) { with(Element) {
-        [hide, undoClipping].call(effect.element); }} 
+      afterFinishInternal: function(effect) {
+        effect.element.hide();
+        effect.element.undoClipping();
+      } 
     }, arguments[1] || {})
   );
 }
 
 Effect.BlindDown = function(element) {
   element = $(element);
-  var elementDimensions = Element.getDimensions(element);
+  var elementDimensions = element.getDimensions();
   return new Effect.Scale(element, 100, 
     Object.extend({ scaleContent: false, 
       scaleX: false,
       scaleFrom: 0,
       scaleMode: {originalHeight: elementDimensions.height, originalWidth: elementDimensions.width},
       restoreAfterFinish: true,
-      afterSetup: function(effect) { with(Element) {
-        makeClipping(effect.element);
-        setStyle(effect.element, {height: '0px'});
-        show(effect.element); 
-      }},  
+      afterSetup: function(effect) {
+        effect.element.makeClipping();
+        effect.element.setStyle({height: '0px'});
+        effect.element.show(); 
+      },  
       afterFinishInternal: function(effect) {
-        Element.undoClipping(effect.element);
+        effect.element.undoClipping();
       }
     }, arguments[1] || {})
   );
@@ -605,7 +624,7 @@
 
 Effect.SwitchOff = function(element) {
   element = $(element);
-  var oldOpacity = Element.getInlineOpacity(element);
+  var oldOpacity = element.getInlineOpacity();
   return new Effect.Appear(element, { 
     duration: 0.4,
     from: 0,
@@ -614,13 +633,16 @@
       new Effect.Scale(effect.element, 1, { 
         duration: 0.3, scaleFromCenter: true,
         scaleX: false, scaleContent: false, restoreAfterFinish: true,
-        beforeSetup: function(effect) { with(Element) {
-          [makePositioned,makeClipping].call(effect.element);
-        }},
-        afterFinishInternal: function(effect) { with(Element) {
-          [hide,undoClipping,undoPositioned].call(effect.element);
-          setStyle(effect.element, {opacity: oldOpacity});
-        }}
+        beforeSetup: function(effect) { 
+          effect.element.makePositioned();
+          effect.element.makeClipping();
+        },
+        afterFinishInternal: function(effect) {
+          effect.element.hide();
+          effect.element.undoClipping();
+          effect.element.undoPositioned();
+          effect.element.setStyle({opacity: oldOpacity});
+        }
       })
     }
   });
@@ -629,105 +651,110 @@
 Effect.DropOut = function(element) {
   element = $(element);
   var oldStyle = {
-    top: Element.getStyle(element, 'top'),
-    left: Element.getStyle(element, 'left'),
-    opacity: Element.getInlineOpacity(element) };
+    top: element.getStyle('top'),
+    left: element.getStyle('left'),
+    opacity: element.getInlineOpacity() };
   return new Effect.Parallel(
     [ new Effect.Move(element, {x: 0, y: 100, sync: true }), 
       new Effect.Opacity(element, { sync: true, to: 0.0 }) ],
     Object.extend(
       { duration: 0.5,
-        beforeSetup: function(effect) { with(Element) {
-          makePositioned(effect.effects[0].element); }},
-        afterFinishInternal: function(effect) { with(Element) {
-          [hide, undoPositioned].call(effect.effects[0].element);
-          setStyle(effect.effects[0].element, oldStyle); }} 
+        beforeSetup: function(effect) {
+          effect.effects[0].element.makePositioned(); 
+        },
+        afterFinishInternal: function(effect) {
+          effect.effects[0].element.hide();
+          effect.effects[0].element.undoPositioned();
+          effect.effects[0].element.setStyle(oldStyle);
+        } 
       }, arguments[1] || {}));
 }
 
 Effect.Shake = function(element) {
   element = $(element);
   var oldStyle = {
-    top: Element.getStyle(element, 'top'),
-    left: Element.getStyle(element, 'left') };
-	  return new Effect.Move(element, 
-	    { x:  20, y: 0, duration: 0.05, afterFinishInternal: function(effect) {
-	  new Effect.Move(effect.element,
-	    { x: -40, y: 0, duration: 0.1,  afterFinishInternal: function(effect) {
-	  new Effect.Move(effect.element,
-	    { x:  40, y: 0, duration: 0.1,  afterFinishInternal: function(effect) {
-	  new Effect.Move(effect.element,
-	    { x: -40, y: 0, duration: 0.1,  afterFinishInternal: function(effect) {
-	  new Effect.Move(effect.element,
-	    { x:  40, y: 0, duration: 0.1,  afterFinishInternal: function(effect) {
-	  new Effect.Move(effect.element,
-	    { x: -20, y: 0, duration: 0.05, afterFinishInternal: function(effect) { with(Element) {
-        undoPositioned(effect.element);
-        setStyle(effect.element, oldStyle);
-  }}}) }}) }}) }}) }}) }});
+    top: element.getStyle('top'),
+    left: element.getStyle('left') };
+    return new Effect.Move(element, 
+      { x:  20, y: 0, duration: 0.05, afterFinishInternal: function(effect) {
+    new Effect.Move(effect.element,
+      { x: -40, y: 0, duration: 0.1,  afterFinishInternal: function(effect) {
+    new Effect.Move(effect.element,
+      { x:  40, y: 0, duration: 0.1,  afterFinishInternal: function(effect) {
+    new Effect.Move(effect.element,
+      { x: -40, y: 0, duration: 0.1,  afterFinishInternal: function(effect) {
+    new Effect.Move(effect.element,
+      { x:  40, y: 0, duration: 0.1,  afterFinishInternal: function(effect) {
+    new Effect.Move(effect.element,
+      { x: -20, y: 0, duration: 0.05, afterFinishInternal: function(effect) {
+        effect.element.undoPositioned();
+        effect.element.setStyle(oldStyle);
+  }}) }}) }}) }}) }}) }});
 }
 
 Effect.SlideDown = function(element) {
   element = $(element);
-  Element.cleanWhitespace(element);
+  element.cleanWhitespace();
   // SlideDown need to have the content of the element wrapped in a container element with fixed height!
-  var oldInnerBottom = Element.getStyle(element.firstChild, 'bottom');
-  var elementDimensions = Element.getDimensions(element);
+  var oldInnerBottom = $(element.firstChild).getStyle('bottom');
+  var elementDimensions = element.getDimensions();
   return new Effect.Scale(element, 100, Object.extend({ 
     scaleContent: false, 
     scaleX: false, 
-    scaleFrom: 0,
+    scaleFrom: window.opera ? 0 : 1,
     scaleMode: {originalHeight: elementDimensions.height, originalWidth: elementDimensions.width},
     restoreAfterFinish: true,
-    afterSetup: function(effect) { with(Element) {
-      makePositioned(effect.element);
-      makePositioned(effect.element.firstChild);
-      if(window.opera) setStyle(effect.element, {top: ''});
-      makeClipping(effect.element);
-      setStyle(effect.element, {height: '0px'});
-      show(element); }},
-    afterUpdateInternal: function(effect) { with(Element) {
-      setStyle(effect.element.firstChild, {bottom:
-        (effect.dims[0] - effect.element.clientHeight) + 'px' }); }},
-    afterFinishInternal: function(effect) { with(Element) {
-      undoClipping(effect.element); 
+    afterSetup: function(effect) {
+      effect.element.makePositioned();
+      effect.element.firstChild.makePositioned();
+      if(window.opera) effect.element.setStyle({top: ''});
+      effect.element.makeClipping();
+      effect.element.setStyle({height: '0px'});
+      effect.element.show(); },
+    afterUpdateInternal: function(effect) {
+      effect.element.firstChild.setStyle({bottom:
+        (effect.dims[0] - effect.element.clientHeight) + 'px' }); 
+    },
+    afterFinishInternal: function(effect) {
+      effect.element.undoClipping(); 
       // IE will crash if child is undoPositioned first
       if(/MSIE/.test(navigator.userAgent)){
-        undoPositioned(effect.element);
-        undoPositioned(effect.element.firstChild);
+        effect.element.undoPositioned();
+        effect.element.firstChild.undoPositioned();
       }else{
-        undoPositioned(effect.element.firstChild);
-        undoPositioned(effect.element);
+        effect.element.firstChild.undoPositioned();
+        effect.element.undoPositioned();
       }
-      setStyle(effect.element.firstChild, {bottom: oldInnerBottom}); }}
+      effect.element.firstChild.setStyle({bottom: oldInnerBottom}); }
     }, arguments[1] || {})
   );
 }
   
 Effect.SlideUp = function(element) {
   element = $(element);
-  Element.cleanWhitespace(element);
-  var oldInnerBottom = Element.getStyle(element.firstChild, 'bottom');
-  return new Effect.Scale(element, 0, 
+  element.cleanWhitespace();
+  var oldInnerBottom = $(element.firstChild).getStyle('bottom');
+  return new Effect.Scale(element, window.opera ? 0 : 1,
    Object.extend({ scaleContent: false, 
     scaleX: false, 
     scaleMode: 'box',
     scaleFrom: 100,
     restoreAfterFinish: true,
-    beforeStartInternal: function(effect) { with(Element) {
-      makePositioned(effect.element);
-      makePositioned(effect.element.firstChild);
-      if(window.opera) setStyle(effect.element, {top: ''});
-      makeClipping(effect.element);
-      show(element); }},  
-    afterUpdateInternal: function(effect) { with(Element) {
-      setStyle(effect.element.firstChild, {bottom:
-        (effect.dims[0] - effect.element.clientHeight) + 'px' }); }},
-    afterFinishInternal: function(effect) { with(Element) {
-        [hide, undoClipping].call(effect.element); 
-        undoPositioned(effect.element.firstChild);
-        undoPositioned(effect.element);
-        setStyle(effect.element.firstChild, {bottom: oldInnerBottom}); }}
+    beforeStartInternal: function(effect) {
+      effect.element.makePositioned();
+      effect.element.firstChild.makePositioned();
+      if(window.opera) effect.element.setStyle({top: ''});
+      effect.element.makeClipping();
+      effect.element.show(); },  
+    afterUpdateInternal: function(effect) {
+      effect.element.firstChild.setStyle({bottom:
+        (effect.dims[0] - effect.element.clientHeight) + 'px' }); },
+    afterFinishInternal: function(effect) {
+      effect.element.hide();
+      effect.element.undoClipping();
+      effect.element.firstChild.undoPositioned();
+      effect.element.undoPositioned();
+      effect.element.setStyle({bottom: oldInnerBottom}); }
    }, arguments[1] || {})
   );
 }
@@ -736,11 +763,11 @@
 Effect.Squish = function(element) {
   return new Effect.Scale(element, window.opera ? 1 : 0, 
     { restoreAfterFinish: true,
-      beforeSetup: function(effect) { with(Element) {
-        makeClipping(effect.element); }},  
-      afterFinishInternal: function(effect) { with(Element) {
-        hide(effect.element); 
-        undoClipping(effect.element); }}
+      beforeSetup: function(effect) {
+        effect.element.makeClipping(effect.element); },  
+      afterFinishInternal: function(effect) {
+        effect.element.hide(effect.element); 
+        effect.element.undoClipping(effect.element); }
   });
 }
 
@@ -757,9 +784,9 @@
     left: element.style.left,
     height: element.style.height,
     width: element.style.width,
-    opacity: Element.getInlineOpacity(element) };
+    opacity: element.getInlineOpacity() };
 
-  var dims = Element.getDimensions(element);    
+  var dims = element.getDimensions();    
   var initialMoveX, initialMoveY;
   var moveX, moveY;
   
@@ -795,11 +822,11 @@
     x: initialMoveX,
     y: initialMoveY,
     duration: 0.01, 
-    beforeSetup: function(effect) { with(Element) {
-      hide(effect.element);
-      makeClipping(effect.element);
-      makePositioned(effect.element);
-    }},
+    beforeSetup: function(effect) {
+      effect.element.hide();
+      effect.element.makeClipping();
+      effect.element.makePositioned();
+    },
     afterFinishInternal: function(effect) {
       new Effect.Parallel(
         [ new Effect.Opacity(effect.element, { sync: true, to: 1.0, from: 0.0, transition: options.opacityTransition }),
@@ -808,12 +835,15 @@
             scaleMode: { originalHeight: dims.height, originalWidth: dims.width }, 
             sync: true, scaleFrom: window.opera ? 1 : 0, transition: options.scaleTransition, restoreAfterFinish: true})
         ], Object.extend({
-             beforeSetup: function(effect) { with(Element) {
-               setStyle(effect.effects[0].element, {height: '0px'});
-               show(effect.effects[0].element); }},
-             afterFinishInternal: function(effect) { with(Element) {
-               [undoClipping, undoPositioned].call(effect.effects[0].element); 
-               setStyle(effect.effects[0].element, oldStyle); }}
+             beforeSetup: function(effect) {
+               effect.effects[0].element.setStyle({height: '0px'});
+               effect.effects[0].element.show(); 
+             },
+             afterFinishInternal: function(effect) {
+               effect.effects[0].element.undoClipping();
+               effect.effects[0].element.undoPositioned();
+               effect.effects[0].element.setStyle(oldStyle); 
+             }
            }, options)
       )
     }
@@ -833,9 +863,9 @@
     left: element.style.left,
     height: element.style.height,
     width: element.style.width,
-    opacity: Element.getInlineOpacity(element) };
+    opacity: element.getInlineOpacity() };
 
-  var dims = Element.getDimensions(element);
+  var dims = element.getDimensions();
   var moveX, moveY;
   
   switch (options.direction) {
@@ -865,11 +895,14 @@
       new Effect.Scale(element, window.opera ? 1 : 0, { sync: true, transition: options.scaleTransition, restoreAfterFinish: true}),
       new Effect.Move(element, { x: moveX, y: moveY, sync: true, transition: options.moveTransition })
     ], Object.extend({            
-         beforeStartInternal: function(effect) { with(Element) {
-           [makePositioned, makeClipping].call(effect.effects[0].element) }},
-         afterFinishInternal: function(effect) { with(Element) {
-           [hide, undoClipping, undoPositioned].call(effect.effects[0].element);
-           setStyle(effect.effects[0].element, oldStyle); }}
+         beforeStartInternal: function(effect) {
+           effect.effects[0].element.makePositioned();
+           effect.effects[0].element.makeClipping(); },
+         afterFinishInternal: function(effect) {
+           effect.effects[0].element.hide();
+           effect.effects[0].element.undoClipping();
+           effect.effects[0].element.undoPositioned();
+           effect.effects[0].element.setStyle(oldStyle); }
        }, options)
   );
 }
@@ -877,13 +910,13 @@
 Effect.Pulsate = function(element) {
   element = $(element);
   var options    = arguments[1] || {};
-  var oldOpacity = Element.getInlineOpacity(element);
+  var oldOpacity = element.getInlineOpacity();
   var transition = options.transition || Effect.Transitions.sinoidal;
   var reverser   = function(pos){ return transition(1-Effect.Transitions.pulse(pos)) };
   reverser.bind(transition);
   return new Effect.Opacity(element, 
     Object.extend(Object.extend({  duration: 3.0, from: 0,
-      afterFinishInternal: function(effect) { Element.setStyle(effect.element, {opacity: oldOpacity}); }
+      afterFinishInternal: function(effect) { effect.element.setStyle({opacity: oldOpacity}); }
     }, options), {transition: reverser}));
 }
 
@@ -902,9 +935,24 @@
     new Effect.Scale(element, 1, { 
       scaleContent: false, 
       scaleY: false,
-      afterFinishInternal: function(effect) { with(Element) {
-        [hide, undoClipping].call(effect.element); 
-        setStyle(effect.element, oldStyle);
-      }} });
+      afterFinishInternal: function(effect) {
+        effect.element.hide();
+        effect.element.undoClipping(); 
+        effect.element.setStyle(oldStyle);
+      } });
   }}, arguments[1] || {}));
-}
+};
+
+['setOpacity','getOpacity','getInlineOpacity','forceRerendering','setContentZoom',
+ 'collectTextNodes','collectTextNodesIgnoreClass','childrenWithClassName'].each( 
+  function(f) { Element.Methods[f] = Element[f]; }
+);
+
+Element.Methods.visualEffect = function(element, effect, options) {
+  s = effect.gsub(/_/, '-').camelize();
+  effect_class = s.charAt(0).toUpperCase() + s.substring(1);
+  new Effect[effect_class](element, options);
+  return $(element);
+};
+
+Element.addMethods();
\ No newline at end of file

Modified: trunk/medickart/public/javascript/prototype.js
===================================================================
--- trunk/medickart/public/javascript/prototype.js	2006-04-16 08:40:43 UTC (rev 8)
+++ trunk/medickart/public/javascript/prototype.js	2006-04-16 09:00:36 UTC (rev 9)
@@ -1,17 +1,13 @@
-/*  Prototype JavaScript framework, version 1.4.0
+/*  Prototype JavaScript framework, version 1.5.0_rc0
  *  (c) 2005 Sam Stephenson <sam at conio.net>
  *
- *  THIS FILE IS AUTOMATICALLY GENERATED. When sending patches, please diff
- *  against the source tree, available from the Prototype darcs repository.
- *
  *  Prototype is freely distributable under the terms of an MIT-style license.
- *
  *  For details, see the Prototype web site: http://prototype.conio.net/
  *
 /*--------------------------------------------------------------------------*/
 
 var Prototype = {
-  Version: '1.4.0',
+  Version: '1.5.0_rc0',
   ScriptFragment: '(?:<script.*?>)((\n|\r|.)*?)(?:<\/script>)',
 
   emptyFunction: function() {},
@@ -29,7 +25,7 @@
 var Abstract = new Object();
 
 Object.extend = function(destination, source) {
-  for (property in source) {
+  for (var property in source) {
     destination[property] = source[property];
   }
   return destination;
@@ -120,26 +116,49 @@
     }
   }
 }
+Object.extend(String.prototype, {
+  gsub: function(pattern, replacement) {
+    var result = '', source = this, match;
+    replacement = arguments.callee.prepareReplacement(replacement);
 
-/*--------------------------------------------------------------------------*/
+    while (source.length > 0) {
+      if (match = source.match(pattern)) {
+        result += source.slice(0, match.index);
+        result += (replacement(match) || '').toString();
+        source  = source.slice(match.index + match[0].length);
+      } else {
+        result += source, source = '';
+      }
+    }
+    return result;
+  },
 
-function $() {
-  var elements = new Array();
+  sub: function(pattern, replacement, count) {
+    replacement = this.gsub.prepareReplacement(replacement);
+    count = count === undefined ? 1 : count;
 
-  for (var i = 0; i < arguments.length; i++) {
-    var element = arguments[i];
-    if (typeof element == 'string')
-      element = document.getElementById(element);
+    return this.gsub(pattern, function(match) {
+      if (--count < 0) return match[0];
+      return replacement(match);
+    });
+  },
 
-    if (arguments.length == 1)
-      return element;
+  scan: function(pattern, iterator) {
+    this.gsub(pattern, iterator);
+    return this;
+  },
 
-    elements.push(element);
-  }
+  truncate: function(length, truncation) {
+    length = length || 30;
+    truncation = truncation === undefined ? '...' : truncation;
+    return this.length > length ?
+      this.slice(0, length - truncation.length) + truncation : this;
+  },
 
-  return elements;
-}
-Object.extend(String.prototype, {
+  strip: function() {
+    return this.replace(/^\s+/, '').replace(/\s+$/, '');
+  },
+
   stripTags: function() {
     return this.replace(/<\/?[^>]+>/gi, '');
   },
@@ -157,7 +176,7 @@
   },
 
   evalScripts: function() {
-    return this.extractScripts().map(eval);
+    return this.extractScripts().map(function(script) { return eval(script) });
   },
 
   escapeHTML: function() {
@@ -203,12 +222,35 @@
   },
 
   inspect: function() {
-    return "'" + this.replace('\\', '\\\\').replace("'", '\\\'') + "'";
+    return "'" + this.replace(/\\/g, '\\\\').replace(/'/g, '\\\'') + "'";
   }
 });
 
+String.prototype.gsub.prepareReplacement = function(replacement) {
+  if (typeof replacement == 'function') return replacement;
+  var template = new Template(replacement);
+  return function(match) { return template.evaluate(match) };
+}
+
 String.prototype.parseQuery = String.prototype.toQueryParams;
 
+var Template = Class.create();
+Template.Pattern = /(^|.|\r|\n)(#\{(.*?)\})/;
+Template.prototype = {
+  initialize: function(template, pattern) {
+    this.template = template.toString();
+    this.pattern  = pattern || Template.Pattern;
+  },
+
+  evaluate: function(object) {
+    return this.template.gsub(this.pattern, function(match) {
+      var before = match[1];
+      if (before == '\\') return match[2];
+      return before + (object[match[3]] || '').toString();
+    });
+  }
+}
+
 var $break    = new Object();
 var $continue = new Object();
 
@@ -313,7 +355,7 @@
     var result;
     this.each(function(value, index) {
       value = (iterator || Prototype.K)(value, index);
-      if (value >= (result || value))
+      if (result == undefined || value >= result)
         result = value;
     });
     return result;
@@ -323,7 +365,7 @@
     var result;
     this.each(function(value, index) {
       value = (iterator || Prototype.K)(value, index);
-      if (value <= (result || value))
+      if (result == undefined || value < result)
         result = value;
     });
     return result;
@@ -375,8 +417,7 @@
 
     var collections = [this].concat(args).map($A);
     return this.map(function(value, index) {
-      iterator(value = collections.pluck(index));
-      return value;
+      return iterator(collections.pluck(index));
     });
   },
 
@@ -406,7 +447,8 @@
 
 Object.extend(Array.prototype, Enumerable);
 
-Array.prototype._reverse = Array.prototype.reverse;
+if (!Array.prototype._reverse)
+  Array.prototype._reverse = Array.prototype.reverse;
 
 Object.extend(Array.prototype, {
   _each: function(iterator) {
@@ -435,7 +477,7 @@
 
   flatten: function() {
     return this.inject([], function(array, value) {
-      return array.concat(value.constructor == Array ?
+      return array.concat(value && value.constructor == Array ?
         value.flatten() : [value]);
     });
   },
@@ -457,21 +499,13 @@
     return (inline !== false ? this : this.toArray())._reverse();
   },
 
-  shift: function() {
-    var result = this[0];
-    for (var i = 0; i < this.length - 1; i++)
-      this[i] = this[i + 1];
-    this.length--;
-    return result;
-  },
-
   inspect: function() {
     return '[' + this.map(Object.inspect).join(', ') + ']';
   }
 });
 var Hash = {
   _each: function(iterator) {
-    for (key in this) {
+    for (var key in this) {
       var value = this[key];
       if (typeof value == 'function') continue;
 
@@ -549,9 +583,9 @@
 var Ajax = {
   getTransport: function() {
     return Try.these(
+      function() {return new XMLHttpRequest()},
       function() {return new ActiveXObject('Msxml2.XMLHTTP')},
-      function() {return new ActiveXObject('Microsoft.XMLHTTP')},
-      function() {return new XMLHttpRequest()}
+      function() {return new ActiveXObject('Microsoft.XMLHTTP')}
     ) || false;
   },
 
@@ -603,6 +637,7 @@
     this.options = {
       method:       'post',
       asynchronous: true,
+      contentType:  'application/x-www-form-urlencoded',
       parameters:   ''
     }
     Object.extend(this.options, options || {});
@@ -662,11 +697,11 @@
   setRequestHeaders: function() {
     var requestHeaders =
       ['X-Requested-With', 'XMLHttpRequest',
-       'X-Prototype-Version', Prototype.Version];
+       'X-Prototype-Version', Prototype.Version,
+       'Accept', 'text/javascript, text/html, application/xml, text/xml, */*'];
 
     if (this.options.method == 'post') {
-      requestHeaders.push('Content-type',
-        'application/x-www-form-urlencoded');
+      requestHeaders.push('Content-type', this.options.contentType);
 
       /* Force "Connection: close" for Mozilla browsers to work around
        * a bug where XMLHttpReqeuest sends an incorrect Content-length
@@ -697,7 +732,7 @@
 
   evalJSON: function() {
     try {
-      return eval(this.header('X-JSON'));
+      return eval('(' + this.header('X-JSON') + ')');
     } catch (e) {}
   },
 
@@ -831,22 +866,57 @@
     this.updater = new Ajax.Updater(this.container, this.url, this.options);
   }
 });
+function $() {
+  var results = [], element;
+  for (var i = 0; i < arguments.length; i++) {
+    element = arguments[i];
+    if (typeof element == 'string')
+      element = document.getElementById(element);
+    results.push(Element.extend(element));
+  }
+  return results.length < 2 ? results[0] : results;
+}
+
 document.getElementsByClassName = function(className, parentElement) {
   var children = ($(parentElement) || document.body).getElementsByTagName('*');
   return $A(children).inject([], function(elements, child) {
     if (child.className.match(new RegExp("(^|\\s)" + className + "(\\s|$)")))
-      elements.push(child);
+      elements.push(Element.extend(child));
     return elements;
   });
 }
 
 /*--------------------------------------------------------------------------*/
 
-if (!window.Element) {
+if (!window.Element)
   var Element = new Object();
+
+Element.extend = function(element) {
+  if (!element) return;
+  if (_nativeExtensions) return element;
+
+  if (!element._extended && element.tagName && element != window) {
+    var methods = Element.Methods, cache = Element.extend.cache;
+    for (property in methods) {
+      var value = methods[property];
+      if (typeof value == 'function')
+        element[property] = cache.findOrStore(value);
+    }
+  }
+
+  element._extended = true;
+  return element;
 }
 
-Object.extend(Element, {
+Element.extend.cache = {
+  findOrStore: function(value) {
+    return this[value] = this[value] || function() {
+      return value.apply(null, [this].concat($A(arguments)));
+    }
+  }
+}
+
+Element.Methods = {
   visible: function(element) {
     return $(element).style.display != 'none';
   },
@@ -882,6 +952,19 @@
     setTimeout(function() {html.evalScripts()}, 10);
   },
 
+  replace: function(element, html) {
+    element = $(element);
+    if (element.outerHTML) {
+      element.outerHTML = html.stripScripts();
+    } else {
+      var range = element.ownerDocument.createRange();
+      range.selectNodeContents(element);
+      element.parentNode.replaceChild(
+        range.createContextualFragment(html.stripScripts()), element);
+    }
+    setTimeout(function() {html.evalScripts()}, 10);
+  },
+
   getHeight: function(element) {
     element = $(element);
     return element.offsetHeight;
@@ -920,6 +1003,13 @@
     return $(element).innerHTML.match(/^\s*$/);
   },
 
+  childOf: function(element, ancestor) {
+    element = $(element), ancestor = $(ancestor);
+    while (element = element.parentNode)
+      if (element == ancestor) return true;
+    return false;
+  },
+
   scrollTo: function(element) {
     element = $(element);
     var x = element.x ? element.x : element.offsetLeft,
@@ -947,7 +1037,7 @@
 
   setStyle: function(element, style) {
     element = $(element);
-    for (name in style)
+    for (var name in style)
       element.style[name.camelize()] = style[name];
   },
 
@@ -1013,8 +1103,33 @@
     element.style.overflow = element._overflow;
     element._overflow = undefined;
   }
-});
+}
 
+Object.extend(Element, Element.Methods);
+
+var _nativeExtensions = false;
+
+if(!HTMLElement && /Konqueror|Safari|KHTML/.test(navigator.userAgent)) {
+  var HTMLElement = {}
+  HTMLElement.prototype = document.createElement('div').__proto__;
+}
+
+Element.addMethods = function(methods) {
+  Object.extend(Element.Methods, methods || {});
+
+  if(typeof HTMLElement != 'undefined') {
+    var methods = Element.Methods, cache = Element.extend.cache;
+    for (property in methods) {
+      var value = methods[property];
+      if (typeof value == 'function')
+        HTMLElement.prototype[property] = cache.findOrStore(value);
+    }
+    _nativeExtensions = true;
+  }
+}
+
+Element.addMethods();
+
 var Toggle = new Object();
 Toggle.display = Element.toggle;
 
@@ -1033,7 +1148,8 @@
       try {
         this.element.insertAdjacentHTML(this.adjacency, this.content);
       } catch (e) {
-        if (this.element.tagName.toLowerCase() == 'tbody') {
+        var tagName = this.element.tagName.toLowerCase();
+        if (tagName == 'tbody' || tagName == 'tr') {
           this.insertContent(this.contentFromAnonymousTable());
         } else {
           throw e;
@@ -1148,6 +1264,116 @@
 }
 
 Object.extend(Element.ClassNames.prototype, Enumerable);
+var Selector = Class.create();
+Selector.prototype = {
+  initialize: function(expression) {
+    this.params = {classNames: []};
+    this.expression = expression.toString().strip();
+    this.parseExpression();
+    this.compileMatcher();
+  },
+
+  parseExpression: function() {
+    function abort(message) { throw 'Parse error in selector: ' + message; }
+
+    if (this.expression == '')  abort('empty expression');
+
+    var params = this.params, expr = this.expression, match, modifier, clause, rest;
+    while (match = expr.match(/^(.*)\[([a-z0-9_:-]+?)(?:([~\|!]?=)(?:"([^"]*)"|([^\]\s]*)))?\]$/i)) {
+      params.attributes = params.attributes || [];
+      params.attributes.push({name: match[2], operator: match[3], value: match[4] || match[5] || ''});
+      expr = match[1];
+    }
+
+    if (expr == '*') return this.params.wildcard = true;
+
+    while (match = expr.match(/^([^a-z0-9_-])?([a-z0-9_-]+)(.*)/i)) {
+      modifier = match[1], clause = match[2], rest = match[3];
+      switch (modifier) {
+        case '#':       params.id = clause; break;
+        case '.':       params.classNames.push(clause); break;
+        case '':
+        case undefined: params.tagName = clause.toUpperCase(); break;
+        default:        abort(expr.inspect());
+      }
+      expr = rest;
+    }
+
+    if (expr.length > 0) abort(expr.inspect());
+  },
+
+  buildMatchExpression: function() {
+    var params = this.params, conditions = [], clause;
+
+    if (params.wildcard)
+      conditions.push('true');
+    if (clause = params.id)
+      conditions.push('element.id == ' + clause.inspect());
+    if (clause = params.tagName)
+      conditions.push('element.tagName.toUpperCase() == ' + clause.inspect());
+    if ((clause = params.classNames).length > 0)
+      for (var i = 0; i < clause.length; i++)
+        conditions.push('Element.hasClassName(element, ' + clause[i].inspect() + ')');
+    if (clause = params.attributes) {
+      clause.each(function(attribute) {
+        var value = 'element.getAttribute(' + attribute.name.inspect() + ')';
+        var splitValueBy = function(delimiter) {
+          return value + ' && ' + value + '.split(' + delimiter.inspect() + ')';
+        }
+
+        switch (attribute.operator) {
+          case '=':       conditions.push(value + ' == ' + attribute.value.inspect()); break;
+          case '~=':      conditions.push(splitValueBy(' ') + '.include(' + attribute.value.inspect() + ')'); break;
+          case '|=':      conditions.push(
+                            splitValueBy('-') + '.first().toUpperCase() == ' + attribute.value.toUpperCase().inspect()
+                          ); break;
+          case '!=':      conditions.push(value + ' != ' + attribute.value.inspect()); break;
+          case '':
+          case undefined: conditions.push(value + ' != null'); break;
+          default:        throw 'Unknown operator ' + attribute.operator + ' in selector';
+        }
+      });
+    }
+
+    return conditions.join(' && ');
+  },
+
+  compileMatcher: function() {
+    this.match = new Function('element', 'if (!element.tagName) return false; \
+      return ' + this.buildMatchExpression());
+  },
+
+  findElements: function(scope) {
+    var element;
+
+    if (element = $(this.params.id))
+      if (this.match(element))
+        if (!scope || Element.childOf(element, scope))
+          return [element];
+
+    scope = (scope || document).getElementsByTagName(this.params.tagName || '*');
+
+    var results = [];
+    for (var i = 0; i < scope.length; i++)
+      if (this.match(element = scope[i]))
+        results.push(Element.extend(element));
+
+    return results;
+  },
+
+  toString: function() {
+    return this.expression;
+  }
+}
+
+function $$() {
+  return $A(arguments).map(function(expression) {
+    return expression.strip().split(/\s+/).inject([null], function(results, expr) {
+      var selector = new Selector(expr);
+      return results.map(selector.findElements.bind(selector)).flatten();
+    });
+  }).flatten();
+}
 var Field = {
   clear: function() {
     for (var i = 0; i < arguments.length; i++)
@@ -1196,7 +1422,7 @@
     form = $(form);
     var elements = new Array();
 
-    for (tagName in Form.Element.Serializers) {
+    for (var tagName in Form.Element.Serializers) {
       var tagElements = form.getElementsByTagName(tagName);
       for (var j = 0; j < tagElements.length; j++)
         elements.push(tagElements[j]);
@@ -1318,23 +1544,17 @@
     var value = '', opt, index = element.selectedIndex;
     if (index >= 0) {
       opt = element.options[index];
-      value = opt.value;
-      if (!value && !('value' in opt))
-        value = opt.text;
+      value = opt.value || opt.text;
     }
     return [element.name, value];
   },
 
   selectMany: function(element) {
-    var value = new Array();
+    var value = [];
     for (var i = 0; i < element.length; i++) {
       var opt = element.options[i];
-      if (opt.selected) {
-        var optValue = opt.value;
-        if (!optValue && !('value' in opt))
-          optValue = opt.text;
-        value.push(optValue);
-      }
+      if (opt.selected)
+        value.push(opt.value || opt.text);
     }
     return [element.name, value];
   }
@@ -1551,7 +1771,8 @@
 });
 
 /* prevent memory leaks in IE */
-Event.observe(window, 'unload', Event.unloadCache, false);
+if (navigator.appVersion.match(/\bMSIE\b/))
+  Event.observe(window, 'unload', Event.unloadCache, false);
 var Position = {
   // set to true if needed, warning: firefox performance problems
   // NOT neeeded for page scrolling, only if draggable contained in

Modified: trunk/medickart/public/javascript/scriptaculous.js
===================================================================
--- trunk/medickart/public/javascript/scriptaculous.js	2006-04-16 08:40:43 UTC (rev 8)
+++ trunk/medickart/public/javascript/scriptaculous.js	2006-04-16 09:00:36 UTC (rev 9)
@@ -20,16 +20,18 @@
 // WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 
 var Scriptaculous = {
-  Version: '1.5.3',
+  Version: '1.6.1',
   require: function(libraryName) {
     // inserting via DOM fails in Safari 2.0, so brute force approach
     document.write('<script type="text/javascript" src="'+libraryName+'"></script>');
   },
   load: function() {
-    if((typeof Prototype=='undefined') ||
-      parseFloat(Prototype.Version.split(".")[0] + "." +
-                 Prototype.Version.split(".")[1]) < 1.4)
-      throw("script.aculo.us requires the Prototype JavaScript framework >= 1.4.0");
+    if((typeof Prototype=='undefined') || 
+       (typeof Element == 'undefined') || 
+       (typeof Element.Methods=='undefined') ||
+       parseFloat(Prototype.Version.split(".")[0] + "." +
+                  Prototype.Version.split(".")[1]) < 1.5)
+       throw("script.aculo.us requires the Prototype JavaScript framework >= 1.5.0");
     
     $A(document.getElementsByTagName("script")).findAll( function(s) {
       return (s.src && s.src.match(/scriptaculous\.js(\?.*)?$/))



From rwd-svn-admin at lists.berlios.de  Sun Apr 16 11:55:38 2006
From: rwd-svn-admin at lists.berlios.de (rwd-svn-admin at lists.berlios.de)
Date: Sun, 16 Apr 2006 11:55:38 +0200
Subject: [Rwd-svn] r11 - in trunk/medickart: conf db
Message-ID: <200604160955.k3G9tctv029832@sheep.berlios.de>

Author: aurelian
Date: 2006-04-16 11:55:38 +0200 (Sun, 16 Apr 2006)
New Revision: 11

Modified:
   trunk/medickart/conf/medickart.routes.php
   trunk/medickart/conf/medickart.xml
   trunk/medickart/db/schema.sql
Log:
 -- more on the rename + pimped db/schema.sql

Modified: trunk/medickart/conf/medickart.routes.php
===================================================================
--- trunk/medickart/conf/medickart.routes.php	2006-04-16 09:51:12 UTC (rev 10)
+++ trunk/medickart/conf/medickart.routes.php	2006-04-16 09:55:38 UTC (rev 11)
@@ -1,7 +1,5 @@
 <?php
-// routes.php
 // $Id$
-// @TODO: write some documentation about this file
 
 $map= Map::getInstance();
 $map->add(new Route(':controller/:action/:id'));

Modified: trunk/medickart/conf/medickart.xml
===================================================================
--- trunk/medickart/conf/medickart.xml	2006-04-16 09:51:12 UTC (rev 10)
+++ trunk/medickart/conf/medickart.xml	2006-04-16 09:55:38 UTC (rev 11)
@@ -2,17 +2,17 @@
 <!-- 
  ! $Id$
  ! -->
-<application name="shop">
+<application name="medickart">
     <!-- localhost environment -->
-    <environment name="localhost">
+    <environment name="gremlin">
         <!-- general properties -->
         <properties>
-            <path>/wwwroot/rwd/trunk/shop</path>
+            <path>/wwwroot/rwd/trunk/medickart</path>
         </properties>
         <!-- web context -->
         <web>
             <server_name>http://localhost</server_name>
-            <document_root>/shop</document_root>
+            <document_root>/medickart</document_root>
             <rewrite>on</rewrite>
             <!-- Session Container
             Only CreoleSessionContainer is available.
@@ -37,7 +37,7 @@
             <formatter>simple</formatter>
             <outputters>
                 <outputter name="file" level="0">
-                    <property name="path" value="/wwwroot/rwd/trunk/shop/log/shop.log" />
+                    <property name="path" value="/wwwroot/rwd/trunk/medickart/log/medickart.log" />
                 </outputter>
                 <!-- <outputter name="stdout" level="0" /> -->
                 <outputter name="mail" level="3">
@@ -51,14 +51,14 @@
             <dsn id = "one"
                  phptype  = "mysql"
                  hostspec = "localhost"
-                 database = "shop"
+                 database = "medickart"
                  username = "root"
-                 password = "" />
+                 password = "virus" />
         </database>
     </environment>
 
     <!-- a sample test environment -->
-    <environment name="test">
+    <environment name="filip">
         <!-- general properties -->
         <properties>
             <path>/wwwroot/rwd/trunk/shop</path>
@@ -92,4 +92,4 @@
     </environment>
   
 </application>
-  
+

Modified: trunk/medickart/db/schema.sql
===================================================================
--- trunk/medickart/db/schema.sql	2006-04-16 09:51:12 UTC (rev 10)
+++ trunk/medickart/db/schema.sql	2006-04-16 09:55:38 UTC (rev 11)
@@ -1,15 +1,16 @@
--- phpMyAdmin SQL Dump
--- version 2.8.0.2
--- http://www.phpmyadmin.net
+--
+-- $Id: $
 -- 
--- Host: localhost
--- Generation Time: Mar 18, 2006 at 05:05 AM
--- Server version: 4.1.16
--- PHP Version: 5.1.2
+-- Database Schema for `medickart`, mysql version
 -- 
--- Database: `medickart`
--- 
 
+SET AUTOCOMMIT=0;
+START TRANSACTION;
+
+DROP DATABASE IF EXISTS `medickart`;
+CREATE DATABASE `medickart`;
+USE `medickart`;
+
 -- --------------------------------------------------------
 
 -- 
@@ -21,13 +22,8 @@
   `first_name` varchar(100) NOT NULL default '',
   `last_name` varchar(100) NOT NULL default '',
   PRIMARY KEY  (`id`)
-) ENGINE=MyISAM DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;
+) ENGINE=MyISAM DEFAULT CHARSET=utf8;
 
--- 
--- Dumping data for table `authors`
--- 
-
-
 -- --------------------------------------------------------
 
 -- 
@@ -38,13 +34,8 @@
   `id` int(10) unsigned NOT NULL auto_increment,
   `product_id` int(10) unsigned NOT NULL default '0',
   PRIMARY KEY  (`id`)
-) ENGINE=MyISAM DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;
+) ENGINE=MyISAM DEFAULT CHARSET=utf8;
 
--- 
--- Dumping data for table `bestsellers`
--- 
-
-
 -- --------------------------------------------------------
 
 -- 
@@ -57,13 +48,8 @@
   `title` varchar(100) NOT NULL default '',
   PRIMARY KEY  (`id`),
   KEY `parent_id` (`parent_id`,`title`)
-) ENGINE=MyISAM DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;
+) ENGINE=MyISAM DEFAULT CHARSET=utf8;
 
--- 
--- Dumping data for table `categories`
--- 
-
-
 -- --------------------------------------------------------
 
 -- 
@@ -77,13 +63,8 @@
   `product_price` float NOT NULL default '0',
   `ordered_quantity` smallint(6) NOT NULL default '0',
   PRIMARY KEY  (`id`)
-) ENGINE=MyISAM DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;
+) ENGINE=MyISAM DEFAULT CHARSET=utf8;
 
--- 
--- Dumping data for table `order_details`
--- 
-
-
 -- --------------------------------------------------------
 
 -- 
@@ -104,13 +85,8 @@
   `www` varchar(60) NOT NULL default '',
   `created_on` timestamp NOT NULL default CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP,
   PRIMARY KEY  (`id`)
-) ENGINE=MyISAM DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;
+) ENGINE=MyISAM DEFAULT CHARSET=utf8;
 
--- 
--- Dumping data for table `orders`
--- 
-
-
 -- --------------------------------------------------------
 
 -- 
@@ -134,13 +110,8 @@
   `updated_on` timestamp NOT NULL default '0000-00-00 00:00:00',
   PRIMARY KEY  (`id`),
   KEY `title` (`title`)
-) ENGINE=MyISAM DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;
+) ENGINE=MyISAM DEFAULT CHARSET=utf8;
 
--- 
--- Dumping data for table `products`
--- 
-
-
 -- --------------------------------------------------------
 
 -- 
@@ -152,13 +123,8 @@
   `product_id` int(10) unsigned NOT NULL default '0',
   `author_id` int(10) unsigned NOT NULL default '0',
   PRIMARY KEY  (`id`)
-) ENGINE=MyISAM DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;
+) ENGINE=MyISAM DEFAULT CHARSET=utf8;
 
--- 
--- Dumping data for table `products_authors`
--- 
-
-
 -- --------------------------------------------------------
 
 -- 
@@ -171,27 +137,23 @@
   `description` text NOT NULL,
   PRIMARY KEY  (`id`),
   KEY `title` (`title`)
-) ENGINE=MyISAM DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;
+) ENGINE=MyISAM DEFAULT CHARSET=utf8;
 
--- 
--- Dumping data for table `publishers`
--- 
-
-
 -- --------------------------------------------------------
 
 -- 
--- Table structure for table `users`
--- 
+-- {{{ Table structure for table `users`
 
 CREATE TABLE `users` (
-  `id` int(10) unsigned NOT NULL auto_increment,
-  `username` varchar(16) NOT NULL default '',
-  `password` varchar(32) NOT NULL default '',
+  `id`          INT     ( 10 )  unsigned NOT NULL auto_increment,
+  `username`    VARCHAR ( 255 )          NOT NULL,
+  `password`    VARCHAR ( 32 )           NOT NULL,
+  `email`       VARCHAR ( 255 )          NOT NULL,
+  `last_login`  TIMESTAMP                NOT NULL default CURRENT_TIMESTAMP,
   PRIMARY KEY  (`id`)
-) ENGINE=MyISAM DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;
+) ENGINE=MyISAM DEFAULT CHARSET=utf8;
 
--- 
--- Dumping data for table `users`
--- 
+-- }}} --------------------------------------------------------
 
+COMMIT;
+



From rwd-svn-admin at lists.berlios.de  Sun Apr 16 11:59:59 2006
From: rwd-svn-admin at lists.berlios.de (rwd-svn-admin at lists.berlios.de)
Date: Sun, 16 Apr 2006 11:59:59 +0200
Subject: [Rwd-svn] r12 - trunk/medickart/db
Message-ID: <200604160959.k3G9xxWg030266@sheep.berlios.de>

Author: aurelian
Date: 2006-04-16 11:59:58 +0200 (Sun, 16 Apr 2006)
New Revision: 12

Modified:
   trunk/medickart/db/schema.sql
Log:
 -- Id keyword + more indent stuff

Modified: trunk/medickart/db/schema.sql
===================================================================
--- trunk/medickart/db/schema.sql	2006-04-16 09:55:38 UTC (rev 11)
+++ trunk/medickart/db/schema.sql	2006-04-16 09:59:58 UTC (rev 12)
@@ -1,5 +1,5 @@
 --
--- $Id: $
+-- $Id$
 -- 
 -- Database Schema for `medickart`, mysql version
 -- 
@@ -128,18 +128,17 @@
 -- --------------------------------------------------------
 
 -- 
--- Table structure for table `publishers`
--- 
+-- {{{ Table structure for table `publishers`
 
 CREATE TABLE `publishers` (
-  `id` int(10) unsigned NOT NULL auto_increment,
-  `title` varchar(200) NOT NULL default '',
-  `description` text NOT NULL,
+  `id`          INT     ( 10 )  unsigned NOT NULL auto_increment,
+  `title`       VARCHAR ( 255 )          NOT NULL,
+  `description` TEXT                     NOT NULL,
   PRIMARY KEY  (`id`),
   KEY `title` (`title`)
 ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
 
--- --------------------------------------------------------
+-- }}} --------------------------------------------------------
 
 -- 
 -- {{{ Table structure for table `users`


Property changes on: trunk/medickart/db/schema.sql
___________________________________________________________________
Name: svn:keywords
   + Id



From rwd-svn-admin at lists.berlios.de  Sun Apr 16 15:34:00 2006
From: rwd-svn-admin at lists.berlios.de (rwd-svn-admin at lists.berlios.de)
Date: Sun, 16 Apr 2006 15:34:00 +0200
Subject: [Rwd-svn] r13 - in trunk/medickart: app/controllers app/helpers app/views app/views/admin app/views/layouts app/views/users public public/stylesheet scripts
Message-ID: <200604161334.k3GDY0KM011954@sheep.berlios.de>

Author: aurelian
Date: 2006-04-16 15:33:46 +0200 (Sun, 16 Apr 2006)
New Revision: 13

Added:
   trunk/medickart/app/controllers/admin_controller.php
   trunk/medickart/app/controllers/users_controller.php
   trunk/medickart/app/helpers/admin_helper.php
   trunk/medickart/app/helpers/users_helper.php
   trunk/medickart/app/views/admin/
   trunk/medickart/app/views/admin/index.phtml
   trunk/medickart/app/views/layouts/admin.phtml
   trunk/medickart/app/views/users/
   trunk/medickart/app/views/users/add.phtml
   trunk/medickart/app/views/users/edit.phtml
   trunk/medickart/app/views/users/index.phtml
   trunk/medickart/public/stylesheet/medickart.css
Removed:
   trunk/medickart/public/stylesheet/medick.css
Modified:
   trunk/medickart/app/controllers/application.php
   trunk/medickart/public/index.php
   trunk/medickart/scripts/generator.php
Log:
 -- more files and layout

Added: trunk/medickart/app/controllers/admin_controller.php
===================================================================
--- trunk/medickart/app/controllers/admin_controller.php	2006-04-16 09:59:58 UTC (rev 12)
+++ trunk/medickart/app/controllers/admin_controller.php	2006-04-16 13:33:46 UTC (rev 13)
@@ -0,0 +1,15 @@
+<?php
+/**
+ * This class is part of medickart project
+ * 
+ * @package controllers.medickart
+ *
+ * $Id$
+ */
+class AdminController extends ApplicationController {
+    
+    protected $before_filter= array('authenticate');
+    
+    public function index() {    }
+    
+}


Property changes on: trunk/medickart/app/controllers/admin_controller.php
___________________________________________________________________
Name: svn:keywords
   + Id

Modified: trunk/medickart/app/controllers/application.php
===================================================================
--- trunk/medickart/app/controllers/application.php	2006-04-16 09:59:58 UTC (rev 12)
+++ trunk/medickart/app/controllers/application.php	2006-04-16 13:33:46 UTC (rev 13)
@@ -1,12 +1,16 @@
 <?php
+/**
+ * This class is part of medickart project
+ *
+ * Methods added here will be available in all your controllers.
+ * $Id$
+ * @package medickart.controllers
+ */
+class ApplicationController extends ActionController {
 
-  /**
-   * This class is part of shop project
-   *
-   * Methods added here will be available in all your controllers.
-   * $Id$
-   * @package shop.controllers
-   */
-  class ApplicationController extends ActionController {
+    protected function authenticate() {
+        return TRUE;
+    }
+    
+}
 
-  }

Added: trunk/medickart/app/controllers/users_controller.php
===================================================================
--- trunk/medickart/app/controllers/users_controller.php	2006-04-16 09:59:58 UTC (rev 12)
+++ trunk/medickart/app/controllers/users_controller.php	2006-04-16 13:33:46 UTC (rev 13)
@@ -0,0 +1,47 @@
+<?php
+/**
+ * This class is part of medickart project
+ * 
+ * Managementul utilizatorilor, (CRUD ptr. `users`)
+ * 
+ * $Id$
+ * @package medickart.controllers
+ */ 
+class UsersController extends ApplicationController {
+
+    protected $before_filters= array('authenticate');
+
+    protected $use_layout= 'admin';
+    
+    /**
+     * Afiseaza toti utilizatori din sistem
+     */ 
+    public function index() {    }
+
+    /**
+     * Afiseaza formularul ptr. adaugarea unui nou utilizator
+     */ 
+	public function add() {    }
+
+    /**
+     * Salveaza un nou utilizator in baza de date
+     */ 
+    public function create() {    }
+
+    /**
+     * Afizeaza formularul pentru editarea unui utilizator
+     */ 
+	public function edit() {    }
+
+    /**
+     * Actualizeaza un utilizator in baza de date
+     */ 
+	public function update() {    }
+
+    /**
+     * Sterge un utilizator din baza de date
+     */ 
+	public function delete() {    }
+
+}
+


Property changes on: trunk/medickart/app/controllers/users_controller.php
___________________________________________________________________
Name: svn:keywords
   + Id

Added: trunk/medickart/app/helpers/admin_helper.php
===================================================================


Property changes on: trunk/medickart/app/helpers/admin_helper.php
___________________________________________________________________
Name: svn:keywords
   + Id

Added: trunk/medickart/app/helpers/users_helper.php
===================================================================


Property changes on: trunk/medickart/app/helpers/users_helper.php
___________________________________________________________________
Name: svn:keywords
   + Id

Added: trunk/medickart/app/views/admin/index.phtml
===================================================================
--- trunk/medickart/app/views/admin/index.phtml	2006-04-16 09:59:58 UTC (rev 12)
+++ trunk/medickart/app/views/admin/index.phtml	2006-04-16 13:33:46 UTC (rev 13)
@@ -0,0 +1,3 @@
+AdminController#index
+<!-- $Id$ -->
+


Property changes on: trunk/medickart/app/views/admin/index.phtml
___________________________________________________________________
Name: svn:keywords
   + Id

Added: trunk/medickart/app/views/layouts/admin.phtml
===================================================================
--- trunk/medickart/app/views/layouts/admin.phtml	2006-04-16 09:59:58 UTC (rev 12)
+++ trunk/medickart/app/views/layouts/admin.phtml	2006-04-16 13:33:46 UTC (rev 13)
@@ -0,0 +1,27 @@
+<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
+     <head>
+         <title>admin</title>
+         <base href="<?=$__server;?><?=$__base;?>/" />
+         <link rel="stylesheet" href="stylesheet/medickart.css" />
+         <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
+     </head>
+     <body>
+        <div id="container">
+            <div id="header">Admin Area</div>
+            <div id="sidebar">
+                <div class="box">
+                    <div class="box-heading">Sectiuni</div>
+                    <div class="box-contents">
+                        <ul class="side-nav">
+                            <li><a href="<?=URL::create('admin');?>">Admin Home</a>
+                            <li><a href="<?=URL::create('users');?>">User Management</a></li>
+                            <li><a href="<?=URL::create('publishers');?>">Publishers</a></li>
+                        </ul>
+                    </div>
+                </div>
+            </div>
+            <div id="content"><?=$content_for_layout;?></div>
+            <div id="footer">The footer</div>
+        </div>
+     </body>
+</html>


Property changes on: trunk/medickart/app/views/layouts/admin.phtml
___________________________________________________________________
Name: svn:keywords
   + Id

Added: trunk/medickart/app/views/users/add.phtml
===================================================================
--- trunk/medickart/app/views/users/add.phtml	2006-04-16 09:59:58 UTC (rev 12)
+++ trunk/medickart/app/views/users/add.phtml	2006-04-16 13:33:46 UTC (rev 13)
@@ -0,0 +1 @@
+UsersController#add
\ No newline at end of file


Property changes on: trunk/medickart/app/views/users/add.phtml
___________________________________________________________________
Name: svn:keywords
   + Id

Added: trunk/medickart/app/views/users/edit.phtml
===================================================================
--- trunk/medickart/app/views/users/edit.phtml	2006-04-16 09:59:58 UTC (rev 12)
+++ trunk/medickart/app/views/users/edit.phtml	2006-04-16 13:33:46 UTC (rev 13)
@@ -0,0 +1 @@
+UsersController#edit
\ No newline at end of file


Property changes on: trunk/medickart/app/views/users/edit.phtml
___________________________________________________________________
Name: svn:keywords
   + Id

Added: trunk/medickart/app/views/users/index.phtml
===================================================================
--- trunk/medickart/app/views/users/index.phtml	2006-04-16 09:59:58 UTC (rev 12)
+++ trunk/medickart/app/views/users/index.phtml	2006-04-16 13:33:46 UTC (rev 13)
@@ -0,0 +1 @@
+UsersController#index
\ No newline at end of file


Property changes on: trunk/medickart/app/views/users/index.phtml
___________________________________________________________________
Name: svn:keywords
   + Id

Modified: trunk/medickart/public/index.php
===================================================================
--- trunk/medickart/public/index.php	2006-04-16 09:59:58 UTC (rev 12)
+++ trunk/medickart/public/index.php	2006-04-16 13:33:46 UTC (rev 13)
@@ -12,8 +12,8 @@
 // and environment to load
 $d= new Dispatcher(
           ContextManager::load(
-            '/wwwroot/rwd/trunk/medickart/conf/shop.xml',
-            'localhost')
+            '/wwwroot/rwd/trunk/medickart/conf/medickart.xml',
+            'gremlin')
         );
 $d->dispatch();
 

Deleted: trunk/medickart/public/stylesheet/medick.css
===================================================================
--- trunk/medickart/public/stylesheet/medick.css	2006-04-16 09:59:58 UTC (rev 12)
+++ trunk/medickart/public/stylesheet/medick.css	2006-04-16 13:33:46 UTC (rev 13)
@@ -1,9 +0,0 @@
-/* stylesheet for shop project */
-/* $Id$ */
-
-body {
-    margin: 20px;
-    padding: 20px;
-    border: 1px solid black;
-    font-family:verdana, arial, helvetica, sans-serif;
-}
\ No newline at end of file

Added: trunk/medickart/public/stylesheet/medickart.css
===================================================================
--- trunk/medickart/public/stylesheet/medickart.css	2006-04-16 09:59:58 UTC (rev 12)
+++ trunk/medickart/public/stylesheet/medickart.css	2006-04-16 13:33:46 UTC (rev 13)
@@ -0,0 +1,74 @@
+/* stylesheet for shop project */
+/* $Id$ */
+
+body {
+    font:11px/1.3em verdana, arial, helvetica, sans-serif;
+}
+
+/* page layout */
+#container {
+    position:relative;
+    width: 750px;
+    margin-right:auto;
+    margin-left:auto;
+    padding: 10px;
+    background-color: #fff;
+    border: 1px solid black;
+}
+
+#header {
+    text-align: center;
+    font-size: 3em;
+    background: url(http://localhost/medickart/images/logo.jpg) no-repeat;
+    height: 40px;
+    border-bottom: 2px solid #555;
+}
+
+#content {
+    padding:20px 20px 5px 20px;
+    margin-left:200px;
+}
+
+#sidebar {
+    width:200px;
+    float: left;
+}
+
+#footer {
+    clear:both;
+    border-top:2px solid #555;
+}
+
+
+/* general */
+a,a:link,a:active {
+    color:#86c200;
+	font-weight:normal;
+	text-decoration:none;
+}
+
+a:hover {
+	font-weight:normal;
+	text-decoration:underline;
+}
+
+.box {
+
+    
+    
+}
+
+.box-heading {
+    background-color: #C24A4B;
+    color: #fff;
+    font-weight:bold;
+    font-size: 1.4em;
+    text-align: center;
+    padding: 0.8em;
+    
+}
+
+.side-nav li {
+    list-style-type:none;
+    padding:0.1em 0;
+}


Property changes on: trunk/medickart/public/stylesheet/medickart.css
___________________________________________________________________
Name: svn:keywords
   + Id

Modified: trunk/medickart/scripts/generator.php
===================================================================
--- trunk/medickart/scripts/generator.php	2006-04-16 09:59:58 UTC (rev 12)
+++ trunk/medickart/scripts/generator.php	2006-04-16 13:33:46 UTC (rev 13)
@@ -12,10 +12,10 @@
   
 switch ($type) {
     case "controller":
-        generate_controller($name, '/wwwroot/rwd/trunk/shop');
+        generate_controller($name, '/wwwroot/rwd/trunk/medickart');
         break;
     case "model":
-        generate_model($name, '/wwwroot/rwd/trunk/shop');
+        generate_model($name, '/wwwroot/rwd/trunk/medickart');
         break;
     default:
         exit(main_banner($argv[0]));



From rwd-svn-admin at lists.berlios.de  Sun Apr 16 18:33:33 2006
From: rwd-svn-admin at lists.berlios.de (rwd-svn-admin at lists.berlios.de)
Date: Sun, 16 Apr 2006 18:33:33 +0200
Subject: [Rwd-svn] r14 - in trunk/medickart: app/controllers app/helpers app/models app/views/layouts app/views/users db public/stylesheet
Message-ID: <200604161633.k3GGXX51001758@sheep.berlios.de>

Author: aurelian
Date: 2006-04-16 18:33:28 +0200 (Sun, 16 Apr 2006)
New Revision: 14

Added:
   trunk/medickart/app/models/user.php
Modified:
   trunk/medickart/app/controllers/application.php
   trunk/medickart/app/controllers/users_controller.php
   trunk/medickart/app/helpers/users_helper.php
   trunk/medickart/app/views/layouts/admin.phtml
   trunk/medickart/app/views/users/add.phtml
   trunk/medickart/app/views/users/edit.phtml
   trunk/medickart/app/views/users/index.phtml
   trunk/medickart/db/schema.sql
   trunk/medickart/public/stylesheet/medickart.css
Log:
 -- more on users

Modified: trunk/medickart/app/controllers/application.php
===================================================================
--- trunk/medickart/app/controllers/application.php	2006-04-16 13:33:46 UTC (rev 13)
+++ trunk/medickart/app/controllers/application.php	2006-04-16 16:33:28 UTC (rev 14)
@@ -8,6 +8,8 @@
  */
 class ApplicationController extends ActionController {
 
+    protected $models= array('user');
+    
     protected function authenticate() {
         return TRUE;
     }

Modified: trunk/medickart/app/controllers/users_controller.php
===================================================================
--- trunk/medickart/app/controllers/users_controller.php	2006-04-16 13:33:46 UTC (rev 13)
+++ trunk/medickart/app/controllers/users_controller.php	2006-04-16 16:33:28 UTC (rev 14)
@@ -16,22 +16,36 @@
     /**
      * Afiseaza toti utilizatori din sistem
      */ 
-    public function index() {    }
+    public function index() {
+        $this->users= User::find();
+    }
 
     /**
      * Afiseaza formularul ptr. adaugarea unui nou utilizator
      */ 
-	public function add() {    }
+	public function add() {
+        $this->user = new User();
+    }
 
     /**
      * Salveaza un nou utilizator in baza de date
      */ 
-    public function create() {    }
+    public function create() {
+        $this->user= new User($this->request->getParameter('user'));
+        if ($this->user->save() === FALSE) {
+            $this->render('add');
+        } else {
+            $this->flash('notice', '<em>' . $this->user->name . '</em> created');
+            $this->redirect_to('index');
+        }        
+    }
 
     /**
      * Afizeaza formularul pentru editarea unui utilizator
      */ 
-	public function edit() {    }
+	public function edit() {
+        $this->user= User::find($this->request->getParameter('id'));
+    }
 
     /**
      * Actualizeaza un utilizator in baza de date

Modified: trunk/medickart/app/helpers/users_helper.php
===================================================================
--- trunk/medickart/app/helpers/users_helper.php	2006-04-16 13:33:46 UTC (rev 13)
+++ trunk/medickart/app/helpers/users_helper.php	2006-04-16 16:33:28 UTC (rev 14)
@@ -0,0 +1,21 @@
+<?php
+// 
+// $Id$
+// 
+
+// Helper for UserController
+class UCHelper extends Object {
+
+    // verifica rolul utilizatorului
+    public static function role_to_human($role) {
+        return $role == User::ADMIN ? 'admin' : 'normal user';
+    }
+    
+    // de implementat.
+    // trebe sa converteasca date intr-un format mai uman
+    public static function last_login_to_human($date) {
+        return $date;
+    }
+    
+}
+    

Added: trunk/medickart/app/models/user.php
===================================================================
--- trunk/medickart/app/models/user.php	2006-04-16 13:33:46 UTC (rev 13)
+++ trunk/medickart/app/models/user.php	2006-04-16 16:33:28 UTC (rev 14)
@@ -0,0 +1,49 @@
+<?php
+/**
+ * This class is part of shop project
+ *
+ * @package medickart.models
+ * $Id$
+ */
+class User extends ActiveRecord {
+
+    const ADMIN = 0;
+
+    const NORMAL= 1;
+    
+    protected function before_save() {
+        $this->validates()->presence_of('name', 'mail', 'pass');
+        $this->validates()->uniqueness_of('name', 'mail');
+        
+        // {{{ this will go to medick core, soon :)
+        if (strlen($this->name) <= 3) { // validez daca numele are cel putin 4 caractere.
+            $this->row->getFieldByName('name')->addError('should have at least 4 chars.');
+        }
+        
+        $p = '/^([^@\s]+)@((?:[-a-z0-9]+\.)+[a-z]{2,})$/i';
+        if (!preg_match($p, $this->mail)) { // validez daca mailul are formatul corect.
+            $this->row->getFieldByName('mail')->addError('is not a valid email address');
+        }
+
+        // }}}
+
+        return true;
+    }
+    
+    protected function before_insert() {
+        $this->pass= md5($this->pass);
+        return true;
+    }
+    
+    /**
+     * Finds a User
+     *
+     * @see ActiveRecord::build()
+     * @return mixed
+     */
+    public static function find() {
+        $args = func_get_args();
+        return ActiveRecord::build(new QueryBuilder(__CLASS__, $args));
+    }
+}
+  


Property changes on: trunk/medickart/app/models/user.php
___________________________________________________________________
Name: svn:keywords
   + Id

Modified: trunk/medickart/app/views/layouts/admin.phtml
===================================================================
--- trunk/medickart/app/views/layouts/admin.phtml	2006-04-16 13:33:46 UTC (rev 13)
+++ trunk/medickart/app/views/layouts/admin.phtml	2006-04-16 16:33:28 UTC (rev 14)
@@ -2,6 +2,7 @@
      <head>
          <title>admin</title>
          <base href="<?=$__server;?><?=$__base;?>/" />
+         <!-- $Id$ -->
          <link rel="stylesheet" href="stylesheet/medickart.css" />
          <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
      </head>

Modified: trunk/medickart/app/views/users/add.phtml
===================================================================
--- trunk/medickart/app/views/users/add.phtml	2006-04-16 13:33:46 UTC (rev 13)
+++ trunk/medickart/app/views/users/add.phtml	2006-04-16 16:33:28 UTC (rev 14)
@@ -1 +1,55 @@
-UsersController#add
\ No newline at end of file
+<!-- $Id$ -->
+<form action="<?=URL::create('users','create');?>" method="post">
+  <fieldset>
+    <legend>Add User</legend>
+
+    <?=ActiveRecordHelper::error_messages_for($user);?>
+    <dl>
+        <dt>
+            <label for="user_name">Name:</label>
+         </dt>
+        <dd><?=FormHelper::text_field($user, 'name', array('size'=>35));?></dd>
+    </dl>
+
+    <dl>
+        <dt>
+            <label for="user_password">Password:</label>
+        </dt>
+        <dd><?=FormHelper::password_field($user,'pass', array('size'=>35));?></dd>
+    </dl>
+
+
+    <dl>
+        <dt>
+            <label for="retype_password">Re-Type Password:</label>
+        </dt>
+        <dd>
+            <input type="passrord" name="retypedpass" id="retype_password" />
+        <!--<?=FormHelper::password_field($user,'retypepass', array('size'=>35));?>-->
+        </dd>
+    </dl>
+
+
+    <dl>
+        <dt>
+            <label for="user_email">Email:</label>
+        </dt>
+        <dd><?=FormHelper::text_field($user,'mail', array('size'=>35));?></dd>
+    </dl>
+    <dl>
+        <dt>
+            <label for="user_role">Role:</label>
+        </dt>    
+        <dd>
+            <select id="user_role">
+                <option value="0" <?=$user->role===0 ? 'selected' : '' ?>>Admin</option>
+                <option value="1" <?=$user->role===1 ? 'selected' : '' ?>>Normal User</option>
+            </select>
+        </dd>
+    </dl>
+
+    
+    <div><?=Form::submit('submit', 'Submit');?></div>
+  </fieldset>
+</form>
+

Modified: trunk/medickart/app/views/users/edit.phtml
===================================================================
--- trunk/medickart/app/views/users/edit.phtml	2006-04-16 13:33:46 UTC (rev 13)
+++ trunk/medickart/app/views/users/edit.phtml	2006-04-16 16:33:28 UTC (rev 14)
@@ -1 +1,35 @@
-UsersController#edit
\ No newline at end of file
+<!-- $Id$ -->
+<form action="<?=URL::create('users','update');?>" method="post">
+  <fieldset>
+    <legend>Edit User</legend>
+    <?=ActiveRecordHelper::error_messages_for($user);?>
+    <dl>
+        <dt><label for="user_name">Name:</label></dt>
+        <dd><?=FormHelper::text_field($user, 'name', array('size'=>35));?></dd>
+    </dl>
+    <dl>
+        <dt><label for="user_email">Email:</label></dt>
+        <dd><?=FormHelper::text_field($user,'mail', array('size'=>35));?></dd>
+    </dl>
+    <dl>
+        <dt><label for="user_role">Role:</label></dt>
+        <dd>
+            <select id="user_role">
+                <option value="0" <?=$user->role===0 ? 'selected' : '' ?>>Admin</option>
+                <option value="1" <?=$user->role===1 ? 'selected' : '' ?>>Normal User</option>
+            </select>
+        </dd>
+    </dl>
+    <div><?=Form::submit('submit', 'Save');?></div>
+  </fieldset>
+</form>
+<hr />
+<form action="<?=URL::create('users', 'change_password');?>" method="post">
+    <fieldset>
+        <legend>Change Password</legend>
+        <dl><dt><label for="current_password">Current Password: </label></dt><dd><input id="current_password" type="password" name="curent_password"/></dd></dl>
+        <dl><dt><label for="new_password">New Password: </label></dt><dd><input id="new_password" type="password" name="new_password"/></dd></dl>
+        <dl><dt><label for="retype_password">Re-type Password: </label></dt><dd><input id="retype_password" type="password" name="retype_password"/></dd></dl>
+        <div><?=Form::submit('submit', 'Change');?></div>
+    </fieldset>
+</form>

Modified: trunk/medickart/app/views/users/index.phtml
===================================================================
--- trunk/medickart/app/views/users/index.phtml	2006-04-16 13:33:46 UTC (rev 13)
+++ trunk/medickart/app/views/users/index.phtml	2006-04-16 16:33:28 UTC (rev 14)
@@ -1 +1,24 @@
-UsersController#index
\ No newline at end of file
+<h2>UsersController#index</h2>
+
+<!-- $Id: -->
+
+
+<? if ($users->size()!=0):?>
+    <? foreach ($users as $user): ?>
+        <a href="<?=URL::create('users', 'edit', array('id'=>$user->id));?>">Edit</a> / 
+        <a href="<?=URL::create('users', 'delete', array('id'=>$user->id));?>">Delete</a> --- 
+        <b>Name:</b> <?=$user->name;?> / 
+        <b>Role:</b> <?=UCHelper::role_to_human($user->role);?>
+        <? if ($user->last_login !== NULL): ?>
+            / <b>Last Login:</b> <?=UCHelper::last_login_to_human($user->last_login);?>
+        <? endif; ?>
+        <br />
+    <? endforeach; ?>
+<? else: ?>
+    No users
+<? endif; ?>
+
+<hr />
+
+<a href="<?=URL::create('users','add');?>">Add a new User</a>
+

Modified: trunk/medickart/db/schema.sql
===================================================================
--- trunk/medickart/db/schema.sql	2006-04-16 13:33:46 UTC (rev 13)
+++ trunk/medickart/db/schema.sql	2006-04-16 16:33:28 UTC (rev 14)
@@ -142,13 +142,16 @@
 
 -- 
 -- {{{ Table structure for table `users`
+-- role tinyint, este 0 ptr. super admin -> are access la zona de administrare sau 1 ptr. normal -> alte chestii.
+-- last_login este null si va fi actualizat la primul login. mai tarziu, o sa validam userii noi prin mail si o sa folosim acest NULL
 
 CREATE TABLE `users` (
   `id`          INT     ( 10 )  unsigned NOT NULL auto_increment,
-  `username`    VARCHAR ( 255 )          NOT NULL,
-  `password`    VARCHAR ( 32 )           NOT NULL,
-  `email`       VARCHAR ( 255 )          NOT NULL,
-  `last_login`  TIMESTAMP                NOT NULL default CURRENT_TIMESTAMP,
+  `name`        VARCHAR ( 255 )          NOT NULL,
+  `pass`        VARCHAR ( 32 )           NOT NULL,
+  `mail`        VARCHAR ( 255 )          NOT NULL,
+  `role`        TINYINT (  1  )          NOT NULL,
+  `last_login`  TIMESTAMP                    NULL,
   PRIMARY KEY  (`id`)
 ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
 

Modified: trunk/medickart/public/stylesheet/medickart.css
===================================================================
--- trunk/medickart/public/stylesheet/medickart.css	2006-04-16 13:33:46 UTC (rev 13)
+++ trunk/medickart/public/stylesheet/medickart.css	2006-04-16 16:33:28 UTC (rev 14)
@@ -27,6 +27,7 @@
 #content {
     padding:20px 20px 5px 20px;
     margin-left:200px;
+    border-left: 2px solid #555;
 }
 
 #sidebar {
@@ -52,12 +53,8 @@
 	text-decoration:underline;
 }
 
-.box {
+.box {      }
 
-    
-    
-}
-
 .box-heading {
     background-color: #C24A4B;
     color: #fff;
@@ -65,10 +62,53 @@
     font-size: 1.4em;
     text-align: center;
     padding: 0.8em;
-    
 }
 
+.box-contents {     }
+
 .side-nav li {
     list-style-type:none;
     padding:0.1em 0;
 }
+
+/* forms */
+
+fieldset {
+    border: none;
+}
+
+legend {
+    font-weight : bold;
+    color : #333;
+    margin : 0;
+    padding : 0.5em;
+}
+
+label {
+    display : block;
+}
+
+fieldset dd input {
+	width: 200px;
+	border : 1px solid #900;
+	padding : 1px;
+}
+	
+fieldset dd select {
+	font-size : 100%;
+	width: 200px;
+	border : 1px solid #900;
+	padding : 1px;
+}
+
+input {
+    margin: 2px;
+}
+
+/* medick validation */
+div.fieldWithErrors {
+    background-color: red;
+    display: table;
+    padding: 2px;
+}
+



From rwd-svn-admin at lists.berlios.de  Sun Apr 16 18:37:19 2006
From: rwd-svn-admin at lists.berlios.de (rwd-svn-admin at lists.berlios.de)
Date: Sun, 16 Apr 2006 18:37:19 +0200
Subject: [Rwd-svn] r15 - trunk/medickart
Message-ID: <200604161637.k3GGbJmd002808@sheep.berlios.de>

Author: aurelian
Date: 2006-04-16 18:37:16 +0200 (Sun, 16 Apr 2006)
New Revision: 15

Added:
   trunk/medickart/CHANGELOG
   trunk/medickart/LICENCE
   trunk/medickart/TODO
Modified:
   trunk/medickart/README
Log:
 -- more files

Added: trunk/medickart/CHANGELOG
===================================================================
--- trunk/medickart/CHANGELOG	2006-04-16 16:33:28 UTC (rev 14)
+++ trunk/medickart/CHANGELOG	2006-04-16 16:37:16 UTC (rev 15)
@@ -0,0 +1 @@
+$Id: $

Added: trunk/medickart/LICENCE
===================================================================

Modified: trunk/medickart/README
===================================================================
--- trunk/medickart/README	2006-04-16 16:33:28 UTC (rev 14)
+++ trunk/medickart/README	2006-04-16 16:37:16 UTC (rev 15)
@@ -1,5 +1,11 @@
 $Id$
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 
-README file for ``shop" sample
+README file for ``medickart" sample
 
+h3. Instalare
+
+medickart necesita versiunea medick din svn:
+
+svn checkout svn://svn.berlios.de/medick medick
+

Added: trunk/medickart/TODO
===================================================================
--- trunk/medickart/TODO	2006-04-16 16:33:28 UTC (rev 14)
+++ trunk/medickart/TODO	2006-04-16 16:37:16 UTC (rev 15)
@@ -0,0 +1 @@
+$Id: $



From rwd-svn-admin at lists.berlios.de  Sun Apr 16 22:37:27 2006
From: rwd-svn-admin at lists.berlios.de (rwd-svn-admin at lists.berlios.de)
Date: Sun, 16 Apr 2006 22:37:27 +0200
Subject: [Rwd-svn] r16 - in trunk: . medickart/app/controllers medickart/app/helpers medickart/app/models medickart/app/views/users
Message-ID: <200604162037.k3GKbRR2026799@sheep.berlios.de>

Author: aurelian
Date: 2006-04-16 22:37:23 +0200 (Sun, 16 Apr 2006)
New Revision: 16

Modified:
   trunk/README
   trunk/medickart/app/controllers/users_controller.php
   trunk/medickart/app/helpers/users_helper.php
   trunk/medickart/app/models/user.php
   trunk/medickart/app/views/users/add.phtml
   trunk/medickart/app/views/users/edit.phtml
   trunk/medickart/app/views/users/index.phtml
Log:
 -- mai mult.

Modified: trunk/README
===================================================================
--- trunk/README	2006-04-16 16:37:16 UTC (rev 15)
+++ trunk/README	2006-04-16 20:37:23 UTC (rev 16)
@@ -1,16 +1,16 @@
-$Id: $
+$Id$
 
-Structura:
+Structura subproiectelor:
 trunk
     \_ nume-proiect1
         \_ structura directoare proiect 1
     \_ nume-proiect2
         \_ structura directoare proiect 2
 
-acces anonim:
+Acces anonim la Subversion:
 svn checkout svn://svn.berlios.de/rwd/trunk/nume-proiect1
 
-docs:
+Subversion docs:
 http://developer.berlios.de/docman/display_doc.php?docid=394&group_id=2
 http://svnbook.red-bean.com/
 

Modified: trunk/medickart/app/controllers/users_controller.php
===================================================================
--- trunk/medickart/app/controllers/users_controller.php	2006-04-16 16:37:16 UTC (rev 15)
+++ trunk/medickart/app/controllers/users_controller.php	2006-04-16 20:37:23 UTC (rev 16)
@@ -32,7 +32,10 @@
      */ 
     public function create() {
         $this->user= new User($this->request->getParameter('user'));
+        $this->user->repass = $this->request->getParameter('repass');
         if ($this->user->save() === FALSE) {
+            // reset passwds?
+            $this->user->repass=$this->user->pass=NULL;
             $this->render('add');
         } else {
             $this->flash('notice', '<em>' . $this->user->name . '</em> created');
@@ -50,12 +53,39 @@
     /**
      * Actualizeaza un utilizator in baza de date
      */ 
-	public function update() {    }
+	public function update() {
+        try {
+            $this->user= User::find($this->request->getParameter('id'))->attributes($this->request->getParameter('user'));
+            if ($this->user->save() === FALSE) {
+                $this->render('edit');
+            } else {
+                $this->flash('notice', $this->user->name . ' updated');
+                $this->redirect_to('index');
+            }
+        } catch (ActiveRecordException $arEx) {
+            $this->logger->warn($arEx->getMessage());
+            $this->flash('error', $arEx->getMessage());
+            $this->redirect_to('index');
+        }
+    }
 
     /**
      * Sterge un utilizator din baza de date
      */ 
-	public function delete() {    }
+	public function delete() {
+        try {
+            $user= User::find($this->request->getParameter('id'));
+            if ($user->delete()===FALSE) {
+                $this->flash('error', 'Cannot delete <em>' . $user->name . '</em>!');
+                return $this->redirect_to('index');
+            }
+            $this->flash('notice', '<em>' . $user->name . '</em> succesfully removed');
+            $this->redirect_to('index');
+        } catch (ActiveRecordException $arEx) {
+            $this->flash('error', $arEx->getMessage());
+            $this->redirect_to('index');
+        }
+    }
 
 }
 

Modified: trunk/medickart/app/helpers/users_helper.php
===================================================================
--- trunk/medickart/app/helpers/users_helper.php	2006-04-16 16:37:16 UTC (rev 15)
+++ trunk/medickart/app/helpers/users_helper.php	2006-04-16 20:37:23 UTC (rev 16)
@@ -11,6 +11,19 @@
         return $role == User::ADMIN ? 'admin' : 'normal user';
     }
     
+    public static function role_to_select($role) {
+        $buff = '<select name="user[role]" id="user_role">';
+        
+        if ($role == User::ADMIN) {
+            $buff .= '<option value="'.User::ADMIN.'" selected="selected">Admin</option>';
+            $buff .= '<option value="'.User::NORMAL.'">Normal User</option>';
+        } elseif ($role == User::NORMAL) {
+            $buff .= '<option value="'.User::ADMIN.'">Admin</option>';
+            $buff .= '<option value="'.User::NORMAL.'" selected="selected">Normal User</option>';
+        }
+        return $buff .= '</select>';
+    }
+    
     // de implementat.
     // trebe sa converteasca date intr-un format mai uman
     public static function last_login_to_human($date) {

Modified: trunk/medickart/app/models/user.php
===================================================================
--- trunk/medickart/app/models/user.php	2006-04-16 16:37:16 UTC (rev 15)
+++ trunk/medickart/app/models/user.php	2006-04-16 20:37:23 UTC (rev 16)
@@ -10,22 +10,33 @@
     const ADMIN = 0;
 
     const NORMAL= 1;
+ 
+    /** virtual field */
+    public $repass;
     
     protected function before_save() {
         $this->validates()->presence_of('name', 'mail', 'pass');
         $this->validates()->uniqueness_of('name', 'mail');
         
-        // {{{ this will go to medick core, soon :)
+        // {{ { this will go to medick core, soon :)
         if (strlen($this->name) <= 3) { // validez daca numele are cel putin 4 caractere.
             $this->row->getFieldByName('name')->addError('should have at least 4 chars.');
         }
         
+        if (strlen($this->pass <= 3)) { // validez daca parola are cel putin 4 caractere
+            $this->row->getFieldByName('pass')->addError('should have at least 4 chars.');
+        }
+        
         $p = '/^([^@\s]+)@((?:[-a-z0-9]+\.)+[a-z]{2,})$/i';
         if (!preg_match($p, $this->mail)) { // validez daca mailul are formatul corect.
             $this->row->getFieldByName('mail')->addError('is not a valid email address');
         }
 
-        // }}}
+        if ($this->pass != $this->repass) {
+            $this->row->getFieldByName('pass')->addError('!=');
+        }
+        
+        // }} }
 
         return true;
     }

Modified: trunk/medickart/app/views/users/add.phtml
===================================================================
--- trunk/medickart/app/views/users/add.phtml	2006-04-16 16:37:16 UTC (rev 15)
+++ trunk/medickart/app/views/users/add.phtml	2006-04-16 20:37:23 UTC (rev 16)
@@ -24,8 +24,7 @@
             <label for="retype_password">Re-Type Password:</label>
         </dt>
         <dd>
-            <input type="passrord" name="retypedpass" id="retype_password" />
-        <!--<?=FormHelper::password_field($user,'retypepass', array('size'=>35));?>-->
+            <input type="password" name="repass" id="retype_password" value="<?=$user->repass;?>" />
         </dd>
     </dl>
 
@@ -41,7 +40,7 @@
             <label for="user_role">Role:</label>
         </dt>    
         <dd>
-            <select id="user_role">
+            <select id="user_role" name="user[role]">
                 <option value="0" <?=$user->role===0 ? 'selected' : '' ?>>Admin</option>
                 <option value="1" <?=$user->role===1 ? 'selected' : '' ?>>Normal User</option>
             </select>

Modified: trunk/medickart/app/views/users/edit.phtml
===================================================================
--- trunk/medickart/app/views/users/edit.phtml	2006-04-16 16:37:16 UTC (rev 15)
+++ trunk/medickart/app/views/users/edit.phtml	2006-04-16 20:37:23 UTC (rev 16)
@@ -3,6 +3,7 @@
   <fieldset>
     <legend>Edit User</legend>
     <?=ActiveRecordHelper::error_messages_for($user);?>
+    <input type="hidden" name="id" value="<?=$user->id;?>" />
     <dl>
         <dt><label for="user_name">Name:</label></dt>
         <dd><?=FormHelper::text_field($user, 'name', array('size'=>35));?></dd>
@@ -13,23 +14,45 @@
     </dl>
     <dl>
         <dt><label for="user_role">Role:</label></dt>
-        <dd>
-            <select id="user_role">
+        <dd><?=UCHelper::role_to_select($user->role);?></dd>
+        <!--
+            <select id="user_role" name="user[role]">
                 <option value="0" <?=$user->role===0 ? 'selected' : '' ?>>Admin</option>
                 <option value="1" <?=$user->role===1 ? 'selected' : '' ?>>Normal User</option>
             </select>
         </dd>
+        -->
     </dl>
     <div><?=Form::submit('submit', 'Save');?></div>
   </fieldset>
 </form>
+
 <hr />
+
 <form action="<?=URL::create('users', 'change_password');?>" method="post">
     <fieldset>
         <legend>Change Password</legend>
-        <dl><dt><label for="current_password">Current Password: </label></dt><dd><input id="current_password" type="password" name="curent_password"/></dd></dl>
-        <dl><dt><label for="new_password">New Password: </label></dt><dd><input id="new_password" type="password" name="new_password"/></dd></dl>
-        <dl><dt><label for="retype_password">Re-type Password: </label></dt><dd><input id="retype_password" type="password" name="retype_password"/></dd></dl>
+        <input type="hidden" name="id" value="<?=$user->id;?>" />
+        <dl>
+            <dt>
+                <label for="current_password">Current Password: </label>
+            </dt>
+            <dd>
+                <input id="current_password" type="password" name="curent_password"/>
+            </dd>
+        </dl>
+
+        <dl>
+            <dt>
+                <label for="new_password">New Password: </label></dt>
+            <dd><input id="new_password" type="password" name="new_password"/></dd>
+        </dl>
+        
+        <dl>
+            <dt>
+                <label for="retype_password">Re-type Password: </label></dt>
+            <dd><input id="retype_password" type="password" name="retype_password"/></dd>
+        </dl>
         <div><?=Form::submit('submit', 'Change');?></div>
     </fieldset>
 </form>

Modified: trunk/medickart/app/views/users/index.phtml
===================================================================
--- trunk/medickart/app/views/users/index.phtml	2006-04-16 16:37:16 UTC (rev 15)
+++ trunk/medickart/app/views/users/index.phtml	2006-04-16 20:37:23 UTC (rev 16)
@@ -1,7 +1,19 @@
 <h2>UsersController#index</h2>
 
-<!-- $Id: -->
+<!-- $Id$ -->
 
+<? if(isset($flash['notice'])):?>
+    <div class="flash_notice">
+        <div class="label">Note</div>
+        <div class="content"><?=$flash['notice'];?></div>
+    </div>
+<? endif;?>
+<? if(isset($flash['error'])):?>
+    <div class="flash_error">
+        <div class="label">Warning</div>
+        <div class="content"><?=$flash['error'];?></div>
+    </div>
+<? endif;?>
 
 <? if ($users->size()!=0):?>
     <? foreach ($users as $user): ?>



From rwd-svn-admin at lists.berlios.de  Mon Apr 24 16:17:25 2006
From: rwd-svn-admin at lists.berlios.de (rwd-svn-admin at lists.berlios.de)
Date: Mon, 24 Apr 2006 16:17:25 +0200
Subject: [Rwd-svn] r17 - in trunk/medickart/app: controllers models views/users
Message-ID: <200604241417.k3OEHPgu028841@sheep.berlios.de>

Author: aurelian
Date: 2006-04-24 16:17:11 +0200 (Mon, 24 Apr 2006)
New Revision: 17

Modified:
   trunk/medickart/app/controllers/users_controller.php
   trunk/medickart/app/models/user.php
   trunk/medickart/app/views/users/index.phtml
Log:
 -- modificari minore la validarea parolei

Modified: trunk/medickart/app/controllers/users_controller.php
===================================================================
--- trunk/medickart/app/controllers/users_controller.php	2006-04-16 20:37:23 UTC (rev 16)
+++ trunk/medickart/app/controllers/users_controller.php	2006-04-24 14:17:11 UTC (rev 17)
@@ -33,6 +33,7 @@
     public function create() {
         $this->user= new User($this->request->getParameter('user'));
         $this->user->repass = $this->request->getParameter('repass');
+        // $this->logger->debug($this->request->getParameter('user'));
         if ($this->user->save() === FALSE) {
             // reset passwds?
             $this->user->repass=$this->user->pass=NULL;
@@ -56,6 +57,8 @@
 	public function update() {
         try {
             $this->user= User::find($this->request->getParameter('id'))->attributes($this->request->getParameter('user'));
+            // campul virtual, repass trebe sa fie identic cu pass, altfel validarea crapa :(
+            $this->user->repass= $this->user->pass;
             if ($this->user->save() === FALSE) {
                 $this->render('edit');
             } else {

Modified: trunk/medickart/app/models/user.php
===================================================================
--- trunk/medickart/app/models/user.php	2006-04-16 20:37:23 UTC (rev 16)
+++ trunk/medickart/app/models/user.php	2006-04-24 14:17:11 UTC (rev 17)
@@ -23,7 +23,7 @@
             $this->row->getFieldByName('name')->addError('should have at least 4 chars.');
         }
         
-        if (strlen($this->pass <= 3)) { // validez daca parola are cel putin 4 caractere
+        if (strlen($this->pass) <= 3) { // validez daca parola are cel putin 4 caractere
             $this->row->getFieldByName('pass')->addError('should have at least 4 chars.');
         }
         

Modified: trunk/medickart/app/views/users/index.phtml
===================================================================
--- trunk/medickart/app/views/users/index.phtml	2006-04-16 20:37:23 UTC (rev 16)
+++ trunk/medickart/app/views/users/index.phtml	2006-04-24 14:17:11 UTC (rev 17)
@@ -15,6 +15,8 @@
     </div>
 <? endif;?>
 
+<hr />
+
 <? if ($users->size()!=0):?>
     <? foreach ($users as $user): ?>
         <a href="<?=URL::create('users', 'edit', array('id'=>$user->id));?>">Edit</a> / 



